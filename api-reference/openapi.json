{
  "openapi": "3.1.0",
  "info": {
    "title": "Intermezzo Global Payroll",
    "summary": "Global Payroll Platform",
    "description": "Intermezzo's global payroll apis, organized by country",
    "version": "1.0.0",
    "x-logo": {
      "url": "/static/icon.svg"
    }
  },
  "servers": [
    {
      "url": "https://sandbox.intermezzo.ai",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/organizations": {
      "get": {
        "tags": ["Core", "Organizations"],
        "summary": "List Orgs",
        "operationId": "list_orgs_organizations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrgResponse"
                  },
                  "type": "array",
                  "title": "Response List Orgs Organizations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      },
      "post": {
        "tags": ["Core", "Organizations"],
        "summary": "Create Orgs",
        "operationId": "create_orgs_organizations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/organizations/{organization_id}": {
      "get": {
        "tags": ["Core", "Organizations"],
        "summary": "Get Org",
        "operationId": "get_org_organizations__organization_id__get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Core", "Organizations"],
        "summary": "Update Org",
        "operationId": "update_org_organizations__organization_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}": {
      "get": {
        "tags": ["Core", "Employees"],
        "summary": "Get Employee",
        "operationId": "get_employee_organizations__organization_id__employees__employee_id__get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees": {
      "get": {
        "tags": ["Core", "Employees"],
        "summary": "List Employees",
        "description": "List employees for an organization with pagination and filtering support.",
        "operationId": "list_employees_organizations__organization_id__employees_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employment_country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by employment country",
              "title": "Employment Country"
            },
            "description": "Filter by employment country"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Size"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrder",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_EmployeeResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Employees"],
        "summary": "Create Employees",
        "operationId": "create_employees_organizations__organization_id__employees_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeRequest"
                },
                "title": "Employees"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/job-details": {
      "post": {
        "tags": ["Core", "Employee Job Details"],
        "summary": "Create Employee Job Details",
        "description": "Create new job details for an employee.",
        "operationId": "create_employee_job_details_organizations__organization_id__employees__employee_id__job_details_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Job Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Core", "Employee Job Details"],
        "summary": "Get Employee Job Details",
        "description": "Get current job details for an employee.",
        "operationId": "get_employee_job_details_organizations__organization_id__employees__employee_id__job_details_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Core", "Employee Job Details"],
        "summary": "Update Employee Job Details",
        "description": "Update job details for an employee (creates new version).",
        "operationId": "update_employee_job_details_organizations__organization_id__employees__employee_id__job_details_put",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Job Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/job-details/history": {
      "get": {
        "tags": ["Core", "Employee Job Details"],
        "summary": "Get Employee Job Details History",
        "description": "Get all historical versions of job details for an employee.",
        "operationId": "get_employee_job_details_history_organizations__organization_id__employees__employee_id__job_details_history_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/tax-details": {
      "post": {
        "tags": ["Core", "Employee Tax Details"],
        "summary": "Create Employee Tax Details",
        "description": "Create new tax details for an employee.",
        "operationId": "create_employee_tax_details_organizations__organization_id__employees__employee_id__tax_details_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Tax Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Core", "Employee Tax Details"],
        "summary": "Get Employee Tax Details",
        "description": "Get current tax details for an employee.",
        "operationId": "get_employee_tax_details_organizations__organization_id__employees__employee_id__tax_details_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Core", "Employee Tax Details"],
        "summary": "Update Employee Tax Details",
        "description": "Update tax details for an employee (creates new version).",
        "operationId": "update_employee_tax_details_organizations__organization_id__employees__employee_id__tax_details_put",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Tax Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/tax-details/history": {
      "get": {
        "tags": ["Core", "Employee Tax Details"],
        "summary": "Get Employee Tax Details History",
        "description": "Get all historical versions of tax details for an employee.",
        "operationId": "get_employee_tax_details_history_organizations__organization_id__employees__employee_id__tax_details_history_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/insurance-details": {
      "post": {
        "tags": ["Core", "Employee Insurance Details"],
        "summary": "Create Employee Insurance Details",
        "description": "Create new insurance details for an employee.",
        "operationId": "create_employee_insurance_details_organizations__organization_id__employees__employee_id__insurance_details_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Insurance Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Core", "Employee Insurance Details"],
        "summary": "Get Employee Insurance Details",
        "description": "Get current insurance details for an employee.",
        "operationId": "get_employee_insurance_details_organizations__organization_id__employees__employee_id__insurance_details_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Core", "Employee Insurance Details"],
        "summary": "Update Employee Insurance Details",
        "description": "Update insurance details for an employee (creates new version).",
        "operationId": "update_employee_insurance_details_organizations__organization_id__employees__employee_id__insurance_details_put",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Insurance Details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}/insurance-details/history": {
      "get": {
        "tags": ["Core", "Employee Insurance Details"],
        "summary": "Get Employee Insurance Details History",
        "description": "Get all historical versions of insurance details for an employee.",
        "operationId": "get_employee_insurance_details_history_organizations__organization_id__employees__employee_id__insurance_details_history_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^emp_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'emp'",
              "example": "emp_01h455vb4pex5vsknk084sn02q",
              "title": "Employee Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/insurance-data": {
      "get": {
        "tags": ["Core", "Insurance"],
        "summary": "Get Organization Insurance Data",
        "operationId": "get_organization_insurance_data_organizations__organization_id__insurance_data_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationInsuranceDataResponse"
                  },
                  "title": "Response Get Organization Insurance Data Organizations  Organization Id  Insurance Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Insurance"],
        "summary": "Create Organization Insurance Data",
        "operationId": "create_organization_insurance_data_organizations__organization_id__insurance_data_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInsuranceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInsuranceDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/insurance-data/{insurance_data_id}": {
      "patch": {
        "tags": ["Core", "Insurance"],
        "summary": "Update Organization Insurance Data",
        "operationId": "update_organization_insurance_data_organizations__organization_id__insurance_data__insurance_data_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "insurance_data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Insurance Data Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInsuranceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInsuranceDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/worksites/{worksite_id}/insurance-data": {
      "get": {
        "tags": ["Core", "Insurance"],
        "summary": "Get Worksite Insurance Data",
        "operationId": "get_worksite_insurance_data_worksites__worksite_id__insurance_data_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorksiteInsuranceDataResponse"
                  },
                  "title": "Response Get Worksite Insurance Data Worksites  Worksite Id  Insurance Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Insurance"],
        "summary": "Create Worksite Insurance Data",
        "operationId": "create_worksite_insurance_data_worksites__worksite_id__insurance_data_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorksiteInsuranceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksiteInsuranceDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/insurance-level-choices": {
      "get": {
        "tags": ["Core", "Insurance"],
        "summary": "Get Organization Insurance Level Choices",
        "operationId": "get_organization_insurance_level_choices_organizations__organization_id__insurance_level_choices_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationInsuranceLevelChoiceResponse"
                  },
                  "title": "Response Get Organization Insurance Level Choices Organizations  Organization Id  Insurance Level Choices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/insurance-level-choices/{choice_id}": {
      "get": {
        "tags": ["Core", "Insurance"],
        "summary": "Get Organization Insurance Level Choice By Id",
        "operationId": "get_organization_insurance_level_choice_by_id_organizations__organization_id__insurance_level_choices__choice_id__get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "choice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^ilc_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'ilc'",
              "example": "ilc_01h455vb4pex5vsknk084sn02q",
              "title": "Choice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInsuranceLevelChoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/insurance-level-choices/{agency_id}": {
      "patch": {
        "tags": ["Core", "Insurance"],
        "summary": "Update Organization Insurance Level Choice",
        "operationId": "update_organization_insurance_level_choice_organizations__organization_id__insurance_level_choices__agency_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Agency Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationInsuranceLevelChoiceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInsuranceLevelChoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/tax-identifiers": {
      "get": {
        "tags": ["Core", "Tax Identifiers"],
        "summary": "Get Organization Tax Identifiers",
        "operationId": "get_organization_tax_identifiers_organizations__organization_id__tax_identifiers_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationTaxIdentifiersListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Tax Identifiers"],
        "summary": "Create Organization Tax Identifier",
        "operationId": "create_organization_tax_identifier_organizations__organization_id__tax_identifiers_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxIdentifiersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxIdentifiersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/tax-identifiers/{tax_identifier_id}": {
      "patch": {
        "tags": ["Core", "Tax Identifiers"],
        "summary": "Update Organization Tax Identifier",
        "operationId": "update_organization_tax_identifier_organizations__organization_id__tax_identifiers__tax_identifier_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "tax_identifier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tax Identifier Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxIdentifiersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxIdentifiersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/worksites/{worksite_id}/tax-identifiers": {
      "get": {
        "tags": ["Core", "Tax Identifiers"],
        "summary": "Get Worksite Tax Identifiers",
        "operationId": "get_worksite_tax_identifiers_worksites__worksite_id__tax_identifiers_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksiteTaxIdentifiersListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Tax Identifiers"],
        "summary": "Create Worksite Tax Identifier",
        "operationId": "create_worksite_tax_identifier_worksites__worksite_id__tax_identifiers_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxIdentifiersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxIdentifiersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{run_id}/approve": {
      "post": {
        "tags": ["Core", "Payroll Runs"],
        "summary": "Approve Payroll",
        "operationId": "approve_payroll_payrollrun__run_id__approve_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^run_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'run'",
              "example": "run_01h455vb4pex5vsknk084sn02q",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/worksites": {
      "get": {
        "tags": ["Core", "Worksites"],
        "summary": "List Worksites",
        "operationId": "list_worksites_organizations__organization_id__worksites_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkSiteResponse"
                  },
                  "title": "Response List Worksites Organizations  Organization Id  Worksites Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Worksites"],
        "summary": "Create Worksite",
        "operationId": "create_worksite_organizations__organization_id__worksites_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkSiteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSiteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/worksites/{worksite_id}": {
      "get": {
        "tags": ["Core", "Worksites"],
        "summary": "Get Worksite",
        "operationId": "get_worksite_organizations__organization_id__worksites__worksite_id__get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSiteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Core", "Worksites"],
        "summary": "Patch Worksite",
        "operationId": "patch_worksite_organizations__organization_id__worksites__worksite_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkSiteUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSiteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": ["Core", "Contacts"],
        "summary": "List Contacts",
        "description": "Get all contacts available to the user with optional name filtering",
        "operationId": "list_contacts_contacts_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter contacts by name",
              "title": "Name"
            },
            "description": "Filter contacts by name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  },
                  "title": "Response List Contacts Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Contacts"],
        "summary": "Create Contact",
        "description": "Create a new contact for an organization",
        "operationId": "create_contact_contacts_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Org Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "patch": {
        "tags": ["Core", "Contacts"],
        "summary": "Patch Contact",
        "description": "Update contact",
        "operationId": "patch_contact_contacts__contact_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^con_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'con'",
              "example": "con_01h455vb4pex5vsknk084sn02q",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/contacts": {
      "get": {
        "tags": ["Core", "Contacts"],
        "summary": "Get Organization Contacts",
        "description": "Get all contacts attached to an organization",
        "operationId": "get_organization_contacts_organizations__organization_id__contacts_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  },
                  "title": "Response Get Organization Contacts Organizations  Organization Id  Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Contacts"],
        "summary": "Create Organization Contact",
        "description": "Create a new contact and attach it to an organization",
        "operationId": "create_organization_contact_organizations__organization_id__contacts_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Core", "Contacts"],
        "summary": "Attach Contacts To Organization",
        "description": "Attach/update contacts for an organization by contact ID list",
        "operationId": "attach_contacts_to_organization_organizations__organization_id__contacts_put",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^con_[0-9a-v]{26}$",
                  "description": "TypeID with prefix 'con'",
                  "example": "con_01h455vb4pex5vsknk084sn02q"
                },
                "title": "Contact Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  },
                  "title": "Response Attach Contacts To Organization Organizations  Organization Id  Contacts Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/contacts/{contact_id}": {
      "post": {
        "tags": ["Core", "Contacts"],
        "summary": "Attach Contact To Organization",
        "description": "Attach a specific contact to an organization",
        "operationId": "attach_contact_to_organization_organizations__organization_id__contacts__contact_id__post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^con_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'con'",
              "example": "con_01h455vb4pex5vsknk084sn02q",
              "title": "Contact Id"
            }
          },
          {
            "name": "primary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Primary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/worksites/{worksite_id}/contacts": {
      "get": {
        "tags": ["Core", "Contacts"],
        "summary": "Get Worksite Contacts",
        "description": "Get all contacts attached to a worksite",
        "operationId": "get_worksite_contacts_organizations__organization_id__worksites__worksite_id__contacts_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  },
                  "title": "Response Get Worksite Contacts Organizations  Organization Id  Worksites  Worksite Id  Contacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "Contacts"],
        "summary": "Create Worksite Contact",
        "description": "Create a new contact and attach it to a worksite",
        "operationId": "create_worksite_contact_organizations__organization_id__worksites__worksite_id__contacts_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Core", "Contacts"],
        "summary": "Attach Contacts To Worksite",
        "description": "Attach/update contacts for a worksite by contact ID list",
        "operationId": "attach_contacts_to_worksite_organizations__organization_id__worksites__worksite_id__contacts_put",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "worksite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^wst_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'wst'",
              "example": "wst_01h455vb4pex5vsknk084sn02q",
              "title": "Worksite Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^con_[0-9a-v]{26}$",
                  "description": "TypeID with prefix 'con'",
                  "example": "con_01h455vb4pex5vsknk084sn02q"
                },
                "title": "Contact Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  },
                  "title": "Response Attach Contacts To Worksite Organizations  Organization Id  Worksites  Worksite Id  Contacts Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/sepa-mandates": {
      "get": {
        "tags": ["Core", "SEPA Mandates"],
        "summary": "List Sepa Mandates",
        "operationId": "list_sepa_mandates_organizations__organization_id__sepa_mandates_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SepaMandateResponse"
                  },
                  "title": "Response List Sepa Mandates Organizations  Organization Id  Sepa Mandates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Core", "SEPA Mandates"],
        "summary": "Create Sepa Mandate",
        "operationId": "create_sepa_mandate_organizations__organization_id__sepa_mandates_post",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SepaMandateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SepaMandateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/sepa-mandates/{mandate_id}": {
      "get": {
        "tags": ["Core", "SEPA Mandates"],
        "summary": "Get Sepa Mandate",
        "operationId": "get_sepa_mandate_organizations__organization_id__sepa_mandates__mandate_id__get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "mandate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^mnd_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'mnd'",
              "example": "mnd_01h455vb4pex5vsknk084sn02q",
              "title": "Mandate Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SepaMandateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Core", "SEPA Mandates"],
        "summary": "Update Sepa Mandate",
        "operationId": "update_sepa_mandate_organizations__organization_id__sepa_mandates__mandate_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^org_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'org'",
              "example": "org_01h455vb4pex5vsknk084sn02q",
              "title": "Organization Id"
            }
          },
          {
            "name": "mandate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^mnd_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'mnd'",
              "example": "mnd_01h455vb4pex5vsknk084sn02q",
              "title": "Mandate Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SepaMandateUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SepaMandateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/germany": {
      "post": {
        "tags": ["Germany Paycheck Calculator"],
        "summary": "Gtn",
        "operationId": "GTN_germany_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollRequest2025"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollResponse2025"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/germany/insurance-agencies": {
      "get": {
        "tags": ["Germany Paycheck Calculator"],
        "summary": "List Insurance Agencies",
        "description": "Get list of insurance agencies with their contribution rates",
        "operationId": "list_insurance_agencies_germany_insurance_agencies_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceAgenciesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/germany/healthagencies": {
      "get": {
        "tags": ["Germany Paycheck Calculator"],
        "summary": "List Health Agencies",
        "operationId": "list_health_agencies_germany_healthagencies_get",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agency ID",
              "title": "Agencyid"
            },
            "description": "Filter by agency ID"
          },
          {
            "name": "agencyCode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agency code",
              "title": "Agencycode"
            },
            "description": "Filter by agency code"
          },
          {
            "name": "fundType",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by fund type",
              "title": "Fundtype"
            },
            "description": "Filter by fund type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HealthAgenciesResponse"
                  },
                  "title": "Response List Health Agencies Germany Healthagencies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/germany/payroll": {
      "post": {
        "tags": ["Germany Paycheck Calculator"],
        "summary": "New Payroll",
        "operationId": "new_payroll_germany_payroll_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payroll__germany__schema__request__PayrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payroll__germany__schema__response__PayrollResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/uk/payroll": {
      "post": {
        "tags": ["UK Paycheck Calculator"],
        "summary": "New Payroll",
        "operationId": "new_payroll_uk_payroll_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payroll__uk__schema__request__PayrollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payroll__uk__schema__response__PayrollResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/uk/payroll/{payrun_id}": {
      "patch": {
        "tags": ["UK Paycheck Calculator"],
        "summary": "Update Payroll",
        "operationId": "update_payroll_uk_payroll__payrun_id__patch",
        "security": [
          {
            "BearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "payrun_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^run_[0-9a-v]{26}$",
              "description": "TypeID with prefix 'run'",
              "example": "run_01h455vb4pex5vsknk084sn02q",
              "title": "Payrun Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payroll__uk__schema__request__PayrollRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payroll__uk__schema__response__PayrollResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalTaxableGrossItems": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "amount"],
        "title": "AdditionalTaxableGrossItems"
      },
      "BankAccountRequest": {
        "properties": {
          "financialInstitutionName": {
            "type": "string",
            "title": "Financialinstitutionname"
          },
          "accountNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accountnumber"
          },
          "routingNumber": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 9,
                "minLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Routingnumber"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 34,
                "title": "IBAN"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive",
            "default": true
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Isprimary",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["financialInstitutionName"],
        "title": "BankAccountRequest",
        "description": "Schema for creating/updating bank accounts"
      },
      "BankAccountResponse": {
        "properties": {
          "financialInstitutionName": {
            "type": "string",
            "title": "Financialinstitutionname"
          },
          "accountNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accountnumber"
          },
          "routingNumber": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 9,
                "minLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Routingnumber"
          },
          "iban": {
            "anyOf": [
              {
                "type": "string",
                "title": "IBAN"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive",
            "default": true
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Isprimary",
            "default": false
          },
          "id": {
            "type": "string",
            "pattern": "^ban_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'ban'",
            "example": "ban_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "financialInstitutionName",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "BankAccountResponse",
        "description": "Schema for bank account responses"
      },
      "BaseSalary": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMaximum": 1000000000.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Gross pay amount",
            "default": "0.00"
          },
          "paymentPeriod": {
            "$ref": "#/components/schemas/payroll__germany__schemas__PaymentPeriod",
            "description": "Lohnzahlungszeitraum (LZZ) - 1=Year, 2=Month, 3=Week, 4=Day"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["paymentPeriod"],
        "title": "BaseSalary"
      },
      "BenefitType": {
        "type": "string",
        "enum": [
          "Company Car",
          "Car Fuel",
          "Van",
          "Van Fuel",
          "Living Accommodation",
          "Beneficial Loan",
          "Medical Insurance",
          "Asset Transferred",
          "Asset Available",
          "Mileage Allowance",
          "Entertainment",
          "Credit Card",
          "Vouchers",
          "Telephone",
          "Mobile Telephone",
          "Relocation Expenses",
          "Services Provided",
          "Professional Subscription",
          "Other Benefit",
          "School Fees",
          "Educational Assistance",
          "Childcare",
          "Holiday",
          "Non-Executive Director Fees",
          "Scholarships"
        ],
        "title": "BenefitType"
      },
      "Benefits": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/BenefitType"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Amount of benefit",
            "default": "0.00"
          },
          "makeGoodAmount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Makegoodamount",
            "description": "Amount paid by employee for the benefit",
            "default": "0.00"
          },
          "foregoneAmount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Foregoneamount",
            "description": "If subject to OpRa, amount foregone",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "Benefits"
      },
      "BusinessType": {
        "type": "string",
        "enum": [
          "Sole Proprietorship",
          "LLC",
          "C Corporation",
          "S Corporation",
          "Partnership"
        ],
        "title": "BusinessType"
      },
      "Car": {
        "properties": {
          "name": {
            "type": "string",
            "const": "Company Car",
            "title": "Name"
          },
          "value": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Cost of car"
          },
          "additionalPayments": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionalpayments",
            "description": "Zuzahl. Firmenw. stpfl.",
            "default": "0.00"
          },
          "privateTrip": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privatetrip",
            "description": "Privatfahrten",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "Car"
      },
      "ChurchTaxConfession": {
        "type": "string",
        "enum": [
          "AK",
          "EV",
          "FA",
          "FB",
          "FG",
          "FM",
          "FR",
          "FS",
          "IB",
          "IH",
          "IL",
          "IS",
          "IW",
          "JD",
          "JH",
          "LT",
          "RF",
          "RK",
          "NA",
          "KEINE"
        ],
        "title": "ChurchTaxConfession",
        "description": "German church tax confessions as defined in ELSTAM API"
      },
      "CompanyCar": {
        "properties": {
          "additionalPayments": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionalpayments",
            "description": "Zuzahl. Firmenw. stpfl."
          },
          "privateTrip": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privatetrip",
            "description": "Privatfahrten"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "CompanyCar"
      },
      "CompanyPension": {
        "properties": {
          "employeeContribution": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employeecontribution",
            "description": "bAV AN",
            "default": "0.00"
          },
          "employerContribution": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employercontribution",
            "description": "bAV AG",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "CompanyPension"
      },
      "ContactRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DEPhoneNumber"
              },
              {
                "type": "null"
              }
            ]
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Roles",
            "default": []
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "ContactRequest"
      },
      "ContactResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DEPhoneNumber"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "pattern": "^con_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'con'",
            "example": "con_01h455vb4pex5vsknk084sn02q"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Roles",
            "default": []
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "id"],
        "title": "ContactResponse"
      },
      "ContactUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DEPhoneNumber"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ContactUpdateRequest"
      },
      "DEPhoneNumber": {
        "properties": {
          "phoneNumber": {
            "type": "string",
            "format": "phone",
            "title": "Phonenumber"
          },
          "phoneType": {
            "$ref": "#/components/schemas/PhoneType"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["phoneNumber", "phoneType"],
        "title": "DEPhoneNumber"
      },
      "Deduction": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Deduction"
      },
      "DeductionType": {
        "type": "string",
        "enum": ["Garnishment", "Loan Repayment"],
        "title": "DeductionType"
      },
      "DeductionsResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DeductionsResponse"
      },
      "EarningType": {
        "type": "string",
        "enum": ["Salary", "Commissions", "Bonus", "Allowances", "Other"],
        "title": "EarningType"
      },
      "EmployeeBenefits": {
        "properties": {
          "benefitsInKind": {
            "type": "string",
            "title": "Benefitsinkind",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeBenefits"
      },
      "EmployeeDetails": {
        "properties": {
          "employeeId": {
            "type": "integer",
            "title": "Employeeid",
            "description": "Mitarbeiterkennzeichen - Employee identification number"
          },
          "yearOfBirth": {
            "type": "integer",
            "maximum": 2025.0,
            "minimum": 1850.0,
            "title": "Yearofbirth",
            "description": "Geburtsjahr - Birth Year to check eligibility for Altersentlastungsbetrag"
          },
          "agreedWorkHoursPerWeek": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Agreedworkhoursperweek",
            "description": "Agreed work hours per week",
            "default": "0"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeId", "yearOfBirth"],
        "title": "EmployeeDetails"
      },
      "EmployeeRequest": {
        "properties": {
          "employeeData": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GermanEmployee"
              },
              {
                "$ref": "#/components/schemas/UKEmployee"
              }
            ],
            "title": "Employeedata",
            "description": "Country-specific employee data based on employment country",
            "discriminator": {
              "propertyName": "employmentCountry",
              "mapping": {
                "DE": "#/components/schemas/GermanEmployee",
                "GB": "#/components/schemas/UKEmployee"
              }
            }
          },
          "bankAccounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BankAccountRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bankaccounts",
            "description": "List of bank accounts associated with the employee"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeData"],
        "title": "EmployeeRequest",
        "description": "Discriminated union of country-specific employee requests."
      },
      "EmployeeResponse": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Id",
            "description": "Unique employee identifier",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "organizationId": {
            "type": "string",
            "pattern": "^org_[0-9a-v]{26}$",
            "title": "Organizationid",
            "description": "Employee's organization",
            "example": "org_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat",
            "description": "Employee record creation timestamp"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat",
            "description": "Employee record last update timestamp"
          },
          "employeeData": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GermanEmployeeResponse"
              },
              {
                "$ref": "#/components/schemas/UKEmployeeResponse"
              }
            ],
            "title": "Employeedata",
            "description": "Country-specific employee data with IDs and timestamps",
            "discriminator": {
              "propertyName": "employmentCountry",
              "mapping": {
                "DE": "#/components/schemas/GermanEmployeeResponse",
                "GB": "#/components/schemas/UKEmployeeResponse"
              }
            }
          },
          "bankAccounts": {
            "items": {
              "$ref": "#/components/schemas/BankAccountResponse"
            },
            "type": "array",
            "title": "Bankaccounts",
            "description": "Employee bank accounts"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organizationId",
          "createdAt",
          "updatedAt",
          "employeeData",
          "bankAccounts"
        ],
        "title": "EmployeeResponse",
        "description": "Employee response model with metadata fields."
      },
      "EmployerLiabilitiesResponse": {
        "properties": {
          "pensionContribution": {
            "type": "string",
            "title": "Pensioncontribution",
            "description": "",
            "default": "0.00"
          },
          "healthInsuranceContribution": {
            "type": "string",
            "title": "Healthinsurancecontribution",
            "description": "Vorsorgepauschale (VKVLZZ) - Insurance allowance for the period",
            "default": "0.00"
          },
          "careInsuranceContribution": {
            "type": "string",
            "title": "Careinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "unemploymentInsuranceContribution": {
            "type": "string",
            "title": "Unemploymentinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "sickPayInsuranceContribution": {
            "type": "string",
            "title": "Sickpayinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "maternityPayInsuranceContribution": {
            "type": "string",
            "title": "Maternitypayinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "insolvencyInsuranceContribution": {
            "type": "string",
            "title": "Insolvencyinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "totalBurden": {
            "type": "string",
            "title": "Totalburden",
            "description": "",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployerLiabilitiesResponse"
      },
      "EmployerSummary": {
        "properties": {
          "pensionContribution": {
            "type": "string",
            "title": "Pensioncontribution",
            "default": "0.00"
          },
          "healthInsuranceContribution": {
            "type": "string",
            "title": "Healthinsurancecontribution",
            "default": "0.00"
          },
          "careInsuranceContribution": {
            "type": "string",
            "title": "Careinsurancecontribution",
            "default": "0.00"
          },
          "unemploymentInsuranceContribution": {
            "type": "string",
            "title": "Unemploymentinsurancecontribution",
            "default": "0.00"
          },
          "sickPayInsuranceContribution": {
            "type": "string",
            "title": "Sickpayinsurancecontribution",
            "default": "0.00"
          },
          "maternityPayInsuranceContribution": {
            "type": "string",
            "title": "Maternitypayinsurancecontribution",
            "default": "0.00"
          },
          "insolvencyInsuranceContribution": {
            "type": "string",
            "title": "Insolvencyinsurancecontribution",
            "default": "0.00"
          },
          "totalBurden": {
            "type": "string",
            "title": "Totalburden",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployerSummary"
      },
      "Errors": {
        "properties": {
          "employeeId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^emp_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'emp'",
                "example": "emp_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employeeid"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeId", "error"],
        "title": "Errors"
      },
      "FundType": {
        "type": "string",
        "enum": [
          "AOK",
          "BKK",
          "Ersatzkassen",
          "IKK",
          "Knappschaft",
          "SVLFG",
          "Umlagekasse"
        ],
        "title": "FundType"
      },
      "GermanEmployee": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref",
            "description": "EN: External reference | DE: Externe Referenz"
          },
          "startDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startdate",
            "description": "EN: Employment start date | DE: Beschäftigungsbeginn"
          },
          "endDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enddate",
            "description": "EN: Employment end date | DE: Beschäftigungsende"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "birthPlace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthplace"
          },
          "birthCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthcountry"
          },
          "personalEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalemail"
          },
          "workEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workemail"
          },
          "phoneNumbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Phones"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phonenumbers",
            "description": "EN: Phone numbers | DE: Telefonnummern"
          },
          "personalData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanPersonalData"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Personal data | DE: Personaldaten"
          },
          "relatedPersons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GermanFamilyDetails"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relatedpersons",
            "description": "EN: Family details | DE: Familiendaten"
          },
          "jobDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__germany__schema__employee__JobDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Job details | DE: Beschäftigungsdetails"
          },
          "insuranceDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__germany__schema__employee__InsuranceDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Insurance details | DE: Versicherungsdetails"
          },
          "taxDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanTaxDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Tax data | DE: Steuerdaten"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "GermanEmployee",
        "description": "Schema for German employee data.",
        "examples": [
          {
            "birth_data": {
              "birth_country": "Germany",
              "birth_date": "1955-01-08",
              "birth_place": "Chemnitz"
            },
            "contact_information": {
              "mobile_number": "+49 170 1234567",
              "personal_email": "elisabeth@example.com",
              "phone_number": "+49 30 12345678",
              "work_email": "e.holgersson@company.de"
            },
            "employment_country": "DE",
            "external_ref": "EMP-2024-001",
            "insurance_details": {
              "care_insurance_children": 1,
              "contribution_group": "1111",
              "insurance_number": "12345678901",
              "insurance_provider": "99300660",
              "person_group": 101,
              "u1_exempt": false,
              "u2_exempt": false,
              "uv_risk_tariff": [
                {
                  "tariff_code": "10",
                  "tariff_description": "Bauwerksbau",
                  "tariff_percentage": "100"
                }
              ],
              "valid_from": "2024-01-01"
            },
            "job_details": {
              "contracted_weekly_hours": 40,
              "department": "Engineering",
              "employment_status": "Employee",
              "job_description": "Development of backend services and APIs",
              "job_title": "Estrichleger",
              "job_type": "Full Time Indefinite Term",
              "occupation_code": "25213",
              "valid_from": "2024-01-15",
              "worksite_id": "wst_"
            },
            "personal_data": {
              "employee_name": {
                "birth_name": "de Angelo",
                "family_name": "Holgersson",
                "family_name_prefix": "auf dem",
                "given_name": "Elisabeth",
                "given_name_suffix": "Baronin",
                "title": "Dipl.-Volkswirt (FH)"
              },
              "gender": "F",
              "marital_status": "married",
              "nationality": "German",
              "residence_address": "Taigschuster 11, 82380 Peissenberg, Germany",
              "valid_from": "2024-01-01"
            },
            "related_persons": {
              "dependent_birth_date": "2018-03-10",
              "dependent_name": {
                "family_name": "Holgersson",
                "given_name": "Max"
              },
              "valid_from": "2024-01-15"
            },
            "start_date": "2024-01-15",
            "tax_details": {
              "additional_taxable_amount": "0.00",
              "child_allowances": "1.0",
              "church_confession": "RK",
              "church_member": true,
              "church_tax_state": "BE",
              "factor": 400,
              "factor_procedure": true,
              "tax_allowance_amount": "0.00",
              "tax_class": "3",
              "tax_id": "12345678901",
              "valid_from": "2024-01-01"
            }
          }
        ]
      },
      "GermanEmployeeResponse": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref",
            "description": "EN: External reference | DE: Externe Referenz"
          },
          "startDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startdate",
            "description": "EN: Employment start date | DE: Beschäftigungsbeginn"
          },
          "endDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enddate",
            "description": "EN: Employment end date | DE: Beschäftigungsende"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "birthPlace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthplace"
          },
          "birthCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthcountry"
          },
          "personalEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalemail"
          },
          "workEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workemail"
          },
          "phoneNumbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Phones"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phonenumbers",
            "description": "EN: Phone numbers | DE: Telefonnummern"
          },
          "personalData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanPersonalDataResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "relatedPersons": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanFamilyDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "jobDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__germany__schema__employee__JobDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "insuranceDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__germany__schema__employee__InsuranceDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "taxDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanTaxDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "personalData",
          "relatedPersons",
          "jobDetails",
          "insuranceDetails",
          "taxDetails"
        ],
        "title": "GermanEmployeeResponse"
      },
      "GermanEmployeeType": {
        "type": "string",
        "enum": [
          "Employee",
          "Mini Jobber",
          "Midi Jobber",
          "Apprentice",
          "Intern",
          "Werkstudent",
          "Temporary Worker"
        ],
        "title": "GermanEmployeeType",
        "description": "Employee types recognized in Germany."
      },
      "GermanFamilyDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "dependentName": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanName"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Dependent name | DE: Name des Angehörigen"
          },
          "dependentBirthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependentbirthdate",
            "description": "EN: Dependent date of birth | DE: Geburtsdatum des Angehörigen"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "GermanFamilyDetails",
        "description": "Schema for family-related data of a German employee. Change tracked."
      },
      "GermanFamilyDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "dependentName": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanName"
              },
              {
                "type": "null"
              }
            ]
          },
          "dependentBirthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependentbirthdate"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt"],
        "title": "GermanFamilyDetailsResponse",
        "description": "Response model for related persons with metadata fields."
      },
      "GermanGender": {
        "type": "string",
        "enum": ["M", "W", "D"],
        "title": "GermanGender",
        "description": "Legally recognized genders in Germany."
      },
      "GermanJobType": {
        "type": "string",
        "enum": [
          "Full Time Indefinite Term",
          "Full Time Fixed Term",
          "Part Time Indefinite Term",
          "Part Time Fixed Term"
        ],
        "title": "GermanJobType",
        "description": "Employment types recognized in Germany."
      },
      "GermanName": {
        "properties": {
          "familyName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Familyname"
          },
          "givenName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Givenname"
          },
          "familyNamePrefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Familynameprefix"
          },
          "givenNameSuffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Givennamesuffix"
          },
          "birthName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthname"
          },
          "birthFamilyNamePrefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthfamilynameprefix"
          },
          "birthGivenNameSuffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthgivennamesuffix"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "GermanName"
      },
      "GermanPersonalData": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "employeeName": {
            "$ref": "#/components/schemas/GermanName",
            "description": "EN: Employee name | DE: Mitarbeitername"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanGender"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Gender | DE: Geschlecht)"
          },
          "maritalStatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maritalstatus",
            "description": "EN: Marital status | DE: Familienstand"
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality",
            "description": "EN: Nationality | DE: Staatsangehörigkeit"
          },
          "residenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Residenceaddress",
            "description": "EN: Residence address | DE: Wohnadresse"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeName"],
        "title": "GermanPersonalData",
        "description": "Schema for personal data of a German employee. Change tracked personal data."
      },
      "GermanPersonalDataResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "employeeName": {
            "$ref": "#/components/schemas/GermanName"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanGender"
              },
              {
                "type": "null"
              }
            ]
          },
          "maritalStatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maritalstatus"
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality"
          },
          "residenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Residenceaddress"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "employeeId",
          "createdAt",
          "updatedAt",
          "employeeName"
        ],
        "title": "GermanPersonalDataResponse",
        "description": "Response model for personal data with metadata fields."
      },
      "GermanStates": {
        "type": "string",
        "enum": [
          "Baden-Württemberg",
          "Bayern",
          "Berlin",
          "Brandenburg",
          "Bremen",
          "Hamburg",
          "Hessen",
          "Mecklenburg-Vorpommern",
          "Niedersachsen",
          "Nordrhein-Westfalen",
          "Rheinland-Pfalz",
          "Saarland",
          "Sachsen",
          "Sachsen-Anhalt",
          "Schleswig-Holstein",
          "Thüringen"
        ],
        "title": "GermanStates",
        "description": "German states (Bundesländer) with their official names"
      },
      "GermanTaxDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "taxId": {
            "type": "string",
            "maxLength": 11,
            "minLength": 11,
            "title": "Taxid",
            "description": "Steuerliche Identifikationsnummer (11 digits) - ELSTAM: steuerid"
          },
          "taxClass": {
            "$ref": "#/components/schemas/TaxClassType",
            "description": "Steuerklasse (1-6) - ELSTAM: steuerklasse"
          },
          "childAllowances": {
            "anyOf": [
              {
                "type": "number",
                "multipleOf": 0.5,
                "maximum": 9.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Childallowances",
            "description": "Kinderfreibeträge - ELSTAM: kinderfreibetrag",
            "default": "0.0"
          },
          "churchConfession": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChurchTaxConfession"
              },
              {
                "type": "null"
              }
            ],
            "description": "Konfession für Kirchensteuer - ELSTAM: kirchensteuer"
          },
          "churchConfessionPartner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChurchTaxConfession"
              },
              {
                "type": "null"
              }
            ],
            "description": "Konfession des Partners - ELSTAM: kirchensteuer_partner"
          },
          "factorProcedure": {
            "type": "boolean",
            "title": "Factorprocedure",
            "description": "Faktorverfahren",
            "default": false
          },
          "factor": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 999.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Factor",
            "description": "Factor Percent as Integer (0-999)"
          },
          "taxAllowanceAmount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxallowanceamount",
            "description": "Steuerfreibetrag - ELSTAM: freibetrag monat"
          },
          "additionalTaxableAmount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionaltaxableamount",
            "description": "Hinzurechnungsbetrag - ELSTAM: hinzurechnungsbetrag monat"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "Gültig ab Datum - ELSTAM: gueltig_ab"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          },
          "churchMember": {
            "type": "boolean",
            "title": "Churchmember",
            "description": "Kirchensteuerpflichtig",
            "default": false
          },
          "churchTaxState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanStates"
              },
              {
                "type": "null"
              }
            ],
            "description": "Bundesland for church tax"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["taxId", "taxClass"],
        "title": "GermanTaxDetails",
        "description": "German-specific tax data with comprehensive validation aligned with ELSTAM API"
      },
      "GermanTaxDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "taxId": {
            "type": "string",
            "maxLength": 11,
            "minLength": 11,
            "title": "Taxid"
          },
          "taxClass": {
            "$ref": "#/components/schemas/TaxClassType"
          },
          "childAllowances": {
            "type": "string",
            "title": "Childallowances",
            "default": "0.0"
          },
          "churchConfession": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChurchTaxConfession"
              },
              {
                "type": "null"
              }
            ]
          },
          "churchConfessionPartner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChurchTaxConfession"
              },
              {
                "type": "null"
              }
            ],
            "description": "Konfession des Partners - ELSTAM: kirchensteuer_partner"
          },
          "factorProcedure": {
            "type": "boolean",
            "title": "Factorprocedure",
            "default": false
          },
          "factor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Factor"
          },
          "taxAllowanceAmount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxallowanceamount",
            "default": "0.00"
          },
          "additionalTaxableAmount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionaltaxableamount",
            "default": "0.00"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "Gültig ab Datum - ELSTAM: gueltig_ab"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          },
          "churchMember": {
            "type": "boolean",
            "title": "Churchmember",
            "default": false
          },
          "churchTaxState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanStates"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "employeeId",
          "createdAt",
          "updatedAt",
          "taxId",
          "taxClass"
        ],
        "title": "GermanTaxDetailsResponse",
        "description": "Response model for tax details with metadata fields."
      },
      "GermanTaxIdentifier": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "country": {
            "type": "string",
            "const": "DE",
            "title": "Country"
          },
          "taxNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxnumber",
            "description": "Steuernummer"
          },
          "businessType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businesstype"
          },
          "isEmployeeFlatTax": {
            "type": "boolean",
            "title": "Isemployeeflattax",
            "default": false
          },
          "taxFilingFrequency": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["monthly", "quarterly", "yearly"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxfilingfrequency"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["country"],
        "title": "GermanTaxIdentifier"
      },
      "GrossWages": {
        "properties": {
          "earnings": {
            "$ref": "#/components/schemas/payroll__germany__schemas__Earnings"
          },
          "companyCar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyCar"
              },
              {
                "type": "null"
              }
            ],
            "description": "Firmenwagen"
          },
          "companyPension": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyPension"
              },
              {
                "type": "null"
              }
            ]
          },
          "vwl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VWL"
              },
              {
                "type": "null"
              }
            ]
          },
          "additionalItems": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AdditionalTaxableGrossItems"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionalitems"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earnings"],
        "title": "GrossWages"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthAgenciesResponse": {
        "properties": {
          "agency": {
            "$ref": "#/components/schemas/HealthAgency"
          },
          "umlage": {
            "items": {
              "$ref": "#/components/schemas/UmlageRates"
            },
            "type": "array",
            "title": "Umlage"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["agency", "umlage"],
        "title": "HealthAgenciesResponse",
        "examples": [
          {
            "agency": {
              "additionalContributionRate": "0.0270",
              "agencyCode": "AOK01",
              "agencyId": 123,
              "bankName": "Deutsche Bank",
              "bic": "COBADEFFXXX",
              "creditorId": "DE98ZZZ09999999999",
              "fundType": "AOK",
              "iban": "DE89370400440532013000",
              "shortName": "AOK Bayern"
            },
            "umlage": [
              {
                "contributionRate": "0.024",
                "levyType": "U1",
                "reimbursementRate": 70
              },
              {
                "contributionRate": "0.0044",
                "levyType": "U2",
                "reimbursementRate": 100
              }
            ]
          }
        ]
      },
      "HealthAgency": {
        "properties": {
          "agencyId": {
            "type": "integer",
            "title": "Agencyid",
            "examples": [123]
          },
          "agencyCode": {
            "type": "string",
            "title": "Agencycode",
            "examples": ["AOK01"]
          },
          "fundType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FundType"
              },
              {
                "type": "null"
              }
            ],
            "examples": ["AOK"]
          },
          "shortName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shortname",
            "examples": ["AOK Bayern"]
          },
          "additionalContributionRate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additionalcontributionrate",
            "examples": ["0.0270"]
          },
          "bankName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bankname",
            "examples": ["Deutsche Bank"]
          },
          "iban": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iban",
            "examples": ["DE89370400440532013000"]
          },
          "bic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bic",
            "examples": ["COBADEFFXXX"]
          },
          "creditorId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creditorid",
            "examples": ["DE98ZZZ09999999999"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["agencyId", "agencyCode"],
        "title": "HealthAgency",
        "examples": [
          {
            "additionalContributionRate": "0.0270",
            "agencyCode": "AOK01",
            "agencyId": 123,
            "bankName": "Deutsche Bank",
            "bic": "COBADEFFXXX",
            "creditorId": "DE98ZZZ09999999999",
            "fundType": "AOK",
            "iban": "DE89370400440532013000",
            "shortName": "AOK Bayern"
          }
        ]
      },
      "HealthInsuranceType": {
        "type": "string",
        "enum": [
          "Statutory KV",
          "Private KV without employer subsidy",
          "Private KV with employer subsidy"
        ],
        "title": "HealthInsuranceType",
        "description": "Krankenversicherungsart (PKV)"
      },
      "HourlyEarnings": {
        "properties": {
          "earningType": {
            "type": "string",
            "enum": [
              "Holiday Work",
              "Hourly Wage",
              "Increased Night Shift",
              "Night Shift",
              "Special Holiday Work",
              "Sunday Work"
            ],
            "title": "Earningtype"
          },
          "hoursWorked": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Hoursworked",
            "description": "Number of hours worked"
          },
          "hourlyRate": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Hourlyrate",
            "description": "Hourly rate in euros"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earningType", "hoursWorked", "hourlyRate"],
        "title": "HourlyEarnings"
      },
      "InsuranceAgenciesResponse": {
        "properties": {
          "agencies": {
            "items": {
              "$ref": "#/components/schemas/InsuranceAgencyResponse"
            },
            "type": "array",
            "title": "Agencies"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["agencies"],
        "title": "InsuranceAgenciesResponse",
        "description": "Response wrapper for list of insurance agencies",
        "examples": [
          {
            "agencies": [
              {
                "agencyCode": "12345678",
                "contributionRate": 1.2,
                "shortName": "TK"
              },
              {
                "agencyCode": "87654321",
                "contributionRate": 1.5,
                "shortName": "AOK"
              }
            ]
          }
        ]
      },
      "InsuranceAgencyResponse": {
        "properties": {
          "agencyCode": {
            "type": "string",
            "title": "Agencycode",
            "description": "Insurance agency identification code"
          },
          "shortName": {
            "type": "string",
            "title": "Shortname",
            "description": "Short name of the insurance agency"
          },
          "contributionRate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributionrate",
            "description": "Additional health insurance contribution rate in percent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["agencyCode", "shortName"],
        "title": "InsuranceAgencyResponse",
        "description": "Response schema for insurance agency endpoint"
      },
      "NICCategory": {
        "type": "string",
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "S",
          "V",
          "X",
          "Z"
        ],
        "title": "NICCategory",
        "description": "NIC Letter Categories"
      },
      "NonCarBenefits": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "const": "Company Pension"
              },
              {
                "type": "string",
                "const": "Capital-forming"
              },
              {
                "type": "string",
                "const": "Allowances"
              },
              {
                "type": "string",
                "const": "Meal Plan"
              },
              {
                "type": "string",
                "const": "Gym"
              },
              {
                "type": "string",
                "const": "Other"
              }
            ],
            "title": "Name"
          },
          "employeeShare": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employeeshare",
            "default": "0.00"
          },
          "employerShare": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employershare",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name"],
        "title": "NonCarBenefits"
      },
      "OrgRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "legalName": {
            "type": "string",
            "title": "Legalname"
          },
          "legalAddress": {
            "type": "string",
            "title": "Legaladdress"
          },
          "correspondenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correspondenceaddress"
          },
          "dbaName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dbaname"
          },
          "registrationCountry": {
            "type": "string",
            "pattern": "^\\w{2}$",
            "title": "Registrationcountry"
          },
          "incorporationDate": {
            "type": "string",
            "format": "date",
            "title": "Incorporationdate"
          },
          "website": {
            "type": "string",
            "title": "Website"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref"
          },
          "workSites": {
            "items": {
              "$ref": "#/components/schemas/WorkSiteRequest"
            },
            "type": "array",
            "title": "Worksites"
          },
          "bankAccounts": {
            "items": {
              "$ref": "#/components/schemas/BankAccountRequest"
            },
            "type": "array",
            "title": "Bankaccounts"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "insuranceData": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrganizationInsuranceDataRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancedata"
          },
          "sepaMandates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SepaMandateRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sepamandates"
          },
          "taxIdentifiers": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersRequest"
            },
            "type": "array",
            "title": "Taxidentifiers",
            "default": []
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationPreferences"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "legalName",
          "legalAddress",
          "registrationCountry",
          "incorporationDate",
          "website",
          "workSites",
          "bankAccounts"
        ],
        "title": "OrgRequest",
        "examples": [
          {
            "bankAccounts": [
              {
                "accountNumber": "DE89370400440532013000",
                "financialInstitutionName": "Deutsche Bank",
                "isActive": true,
                "isPrimary": true,
                "routingNumber": "370400440"
              }
            ],
            "contactPerson": {
              "email": "hans.mueller@mail.com",
              "name": "Hans Mueller"
            },
            "correspondenceAddress": "Korrespondenz-Straße 456, 10117 Berlin, Deutschland",
            "dbaName": "ExampleCo GmbH",
            "externalRef": "EXT-DE-001234",
            "incorporationDate": "2025-07-15",
            "insuranceData": [
              {
                "accidentInsuranceCompanyNumber": "DE111111111",
                "accidentInsurancePin": "DE-PIN-123456",
                "companyNumber": "DE123456789",
                "payrollProcessingLocationNumber": "DE333333333",
                "payrollServiceProviderNumber": "DE222222222",
                "u1Selected": false,
                "u2Selected": true,
                "u3Selected": false,
                "unrs": "DE987654321",
                "validFrom": "2025-07-15"
              }
            ],
            "legalAddress": "Musterstraße 123, 10115 Berlin, Deutschland",
            "legalName": "Example Corporation GmbH",
            "preferences": {
              "extraPaidLeaveDays": 2,
              "insuranceCreditPreference": "credit",
              "insuranceSubsidyMethod": "assessment_ceiling",
              "isInsolvent": false
            },
            "registrationCountry": "DE",
            "taxIdentifiers": [
              {
                "taxData": {
                  "businessType": "GmbH",
                  "country": "DE",
                  "isEmployeeFlatTax": true,
                  "taxFilingFrequency": "monthly",
                  "taxNumber": "12/345/67890"
                },
                "validFrom": "2025-07-15"
              }
            ],
            "validFrom": "2025-07-15",
            "website": "https://company.com",
            "workSites": [
              {
                "address": "Musterstraße 123, 10115 Berlin, Deutschland",
                "contactPerson": {
                  "email": "anna.schmidt@mail.com",
                  "name": "Anna Schmidt"
                },
                "insuranceData": [
                  {
                    "accidentInsuranceCompanyNumber": "DE-WS-111",
                    "accidentInsurancePin": "DE-WS-PIN-123",
                    "payrollProcessingLocationNumber": "DE-WS-333",
                    "payrollServiceProviderNumber": "DE-WS-222",
                    "validFrom": "2025-07-15",
                    "worksiteLocationNumber": "DE-WS-001"
                  }
                ],
                "isActive": true,
                "isPrimary": true,
                "name": "Hauptsitz",
                "taxIdentifiers": [
                  {
                    "taxData": {
                      "businessType": "GmbH",
                      "country": "DE",
                      "isEmployeeFlatTax": false,
                      "taxFilingFrequency": "quarterly",
                      "taxNumber": "12/345/67891"
                    },
                    "validFrom": "2025-07-15"
                  }
                ],
                "validFrom": "2024-01-15"
              }
            ]
          }
        ]
      },
      "OrgResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "legalName": {
            "type": "string",
            "title": "Legalname"
          },
          "legalAddress": {
            "type": "string",
            "title": "Legaladdress"
          },
          "correspondenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correspondenceaddress"
          },
          "dbaName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dbaname"
          },
          "registrationCountry": {
            "type": "string",
            "pattern": "^\\w{2}$",
            "title": "Registrationcountry"
          },
          "incorporationDate": {
            "type": "string",
            "format": "date",
            "title": "Incorporationdate"
          },
          "website": {
            "type": "string",
            "title": "Website"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref"
          },
          "id": {
            "type": "string",
            "pattern": "^org_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'org'",
            "example": "org_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "workSites": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkSiteResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksites"
          },
          "bankAccounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BankAccountResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bankaccounts"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "taxIdentifiers": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersResponse"
            },
            "type": "array",
            "title": "Taxidentifiers",
            "default": []
          },
          "insuranceData": {
            "items": {
              "$ref": "#/components/schemas/OrganizationInsuranceDataResponse"
            },
            "type": "array",
            "title": "Insurancedata",
            "default": []
          },
          "sepaMandates": {
            "items": {
              "$ref": "#/components/schemas/SepaMandateResponse"
            },
            "type": "array",
            "title": "Sepamandates",
            "default": []
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationPreferences"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "legalName",
          "legalAddress",
          "registrationCountry",
          "incorporationDate",
          "website",
          "id",
          "createdAt",
          "updatedAt",
          "workSites",
          "bankAccounts"
        ],
        "title": "OrgResponse",
        "examples": [
          {
            "bankAccounts": [
              {
                "accountNumber": "12345678",
                "createdAt": "2024-03-15T10:30:45.456789Z",
                "financialInstitutionName": "Example Bank",
                "id": "ban_01234567890abcdefghijklmnop",
                "isActive": true,
                "isPrimary": true,
                "orgId": "org_01234567890abcdefghijklmnop",
                "routingNumber": "123456789",
                "updatedAt": "2024-03-15T10:30:45.456789Z"
              }
            ],
            "createdAt": "2024-03-15T10:30:45.123456Z",
            "createdBy": "user_01234567890abcdefghijklmnop",
            "dbaName": "ExampleCo",
            "externalRef": "EXT-001234",
            "id": "org_01234567890abcdefghijklmnop",
            "incorporationDate": "2024-01-15",
            "legalAddress": "123 Example Street, London, EC1A 1BB",
            "legalName": "Example Corporation Ltd",
            "registrationCountry": "GB",
            "taxIdentifiers": {
              "accountsOfficeReference": "123PA00000001",
              "businessType": "Limited Company",
              "country": "GB",
              "payeReferenceNumber": "123/A45678"
            },
            "updatedAt": "2024-03-15T10:30:45.123456Z",
            "website": "https://example-company.com/",
            "workSites": [
              {
                "address": "123 Example Street, London, EC1A 1BB",
                "createdAt": "2024-03-15T10:30:45.234567Z",
                "id": "wst_01234567890abcdefghijklmnop",
                "isActive": true,
                "isPrimary": true,
                "name": "Headquarters",
                "orgId": "org_01234567890abcdefghijklmnop",
                "updatedAt": "2024-03-15T10:30:45.234567Z"
              },
              {
                "address": "456 Sample Road, Manchester, M1 2AB",
                "createdAt": "2024-03-15T10:30:45.345678Z",
                "id": "wst_09876543210zyxwvutsrqponmlk",
                "isActive": true,
                "isPrimary": false,
                "name": "Branch Office",
                "orgId": "org_01234567890abcdefghijklmnop",
                "updatedAt": "2024-03-15T10:30:45.345678Z"
              }
            ]
          }
        ]
      },
      "OrgUpdateRequest": {
        "properties": {
          "legalName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legalname"
          },
          "legalAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legaladdress"
          },
          "correspondenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correspondenceaddress"
          },
          "dbaName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dbaname"
          },
          "registrationCountry": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\w{2}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registrationcountry"
          },
          "incorporationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Incorporationdate"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref"
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationPreferences"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OrgUpdateRequest"
      },
      "OrganizationInsuranceDataRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "companyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Companynumber",
            "description": "DE: BBNR"
          },
          "unrs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrs",
            "description": "DE: UNRS"
          },
          "accidentInsuranceCompanyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancecompanynumber",
            "description": "DE: BBNR_UV"
          },
          "accidentInsurancePin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancepin",
            "description": "DE: UV PIN"
          },
          "payrollServiceProviderNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollserviceprovidernumber",
            "description": "DE: BBNR_AS"
          },
          "payrollProcessingLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollprocessinglocationnumber",
            "description": "DE: BBNR_LB"
          },
          "u1Selected": {
            "type": "boolean",
            "title": "U1Selected",
            "default": false
          },
          "u2Selected": {
            "type": "boolean",
            "title": "U2Selected",
            "default": false
          },
          "u3Selected": {
            "type": "boolean",
            "title": "U3Selected",
            "default": false
          },
          "agencyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agencyid"
          },
          "alternateAgencyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternateagencyid"
          },
          "contactId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^con_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'con'",
                "example": "con_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactid"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OrganizationInsuranceDataRequest"
      },
      "OrganizationInsuranceDataResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "companyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Companynumber",
            "description": "DE: BBNR"
          },
          "unrs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrs",
            "description": "DE: UNRS"
          },
          "accidentInsuranceCompanyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancecompanynumber",
            "description": "DE: BBNR_UV"
          },
          "accidentInsurancePin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancepin",
            "description": "DE: UV PIN"
          },
          "payrollServiceProviderNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollserviceprovidernumber",
            "description": "DE: BBNR_AS"
          },
          "payrollProcessingLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollprocessinglocationnumber",
            "description": "DE: BBNR_LB"
          },
          "u1Selected": {
            "type": "boolean",
            "title": "U1Selected",
            "default": false
          },
          "u2Selected": {
            "type": "boolean",
            "title": "U2Selected",
            "default": false
          },
          "u3Selected": {
            "type": "boolean",
            "title": "U3Selected",
            "default": false
          },
          "agencyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agencyid"
          },
          "alternateAgencyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternateagencyid"
          },
          "contactId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^con_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'con'",
                "example": "con_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactid"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id"],
        "title": "OrganizationInsuranceDataResponse"
      },
      "OrganizationInsuranceLevelChoiceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^ilc_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'ilc'",
            "example": "ilc_01h455vb4pex5vsknk084sn02q"
          },
          "agencyId": {
            "type": "integer",
            "title": "Agencyid"
          },
          "compensationLevyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compensationlevyid"
          },
          "orgId": {
            "type": "string",
            "pattern": "^org_[0-9a-v]{26}$",
            "title": "Orgid",
            "description": "TypeID with prefix 'org'",
            "example": "org_01h455vb4pex5vsknk084sn02q"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "agencyId", "compensationLevyId", "orgId"],
        "title": "OrganizationInsuranceLevelChoiceResponse"
      },
      "OrganizationInsuranceLevelChoiceUpdateRequest": {
        "properties": {
          "compensationLevyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compensationlevyid"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OrganizationInsuranceLevelChoiceUpdateRequest"
      },
      "OrganizationPreferences": {
        "properties": {
          "isInsolvent": {
            "type": "boolean",
            "title": "Isinsolvent",
            "default": false
          },
          "insolvencyStartDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insolvencystartdate"
          },
          "insolvencyEndDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insolvencyenddate"
          },
          "insolvencyCompanyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insolvencycompanynumber"
          },
          "insuranceSubsidyMethod": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["remuneration", "assessment_ceiling"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancesubsidymethod"
          },
          "extraPaidLeaveDays": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extrapaidleavedays"
          },
          "insuranceCreditPreference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancecreditpreference",
            "description": "Für die Möglichkeit der Überweisung, Verrechnung oder Gutschrift ist eine entsprechende Eingabemöglichkeit vorzusehen."
          },
          "firstPayrollDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstpayrolldate",
            "description": "First payroll (ever) run by the company"
          },
          "lastPayrollDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastpayrolldate",
            "description": "Last payroll run in other system before Intermezzo's first payroll"
          },
          "firstPayrollIntermezzo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstpayrollintermezzo",
            "description": "First date Intermezzo software is used for payroll"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OrganizationPreferences"
      },
      "OrganizationTaxIdentifiersListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersResponse"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["data"],
        "title": "OrganizationTaxIdentifiersListResponse"
      },
      "OtherEarnings": {
        "properties": {
          "earningType": {
            "type": "string",
            "enum": ["Commissions", "Bonus", "Allowances", "Other"],
            "title": "Earningtype"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount",
            "description": "Earnings amount"
          },
          "earningFrequency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PayCycleType-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "If recurring, specify the frequency",
            "default": "Month"
          },
          "isLumpsum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Islumpsum",
            "description": "True if onetime (Einmalig). False if recurring (Laufend)",
            "default": false
          },
          "doGrossup": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dogrossup",
            "description": "True if the amount needs to be grossed up",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earningType", "amount"],
        "title": "OtherEarnings"
      },
      "PaginatedResponse_EmployeeResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmployeeResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        },
        "type": "object",
        "required": ["items", "meta"],
        "title": "PaginatedResponse[EmployeeResponse]"
      },
      "PaginationMeta": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": ["total", "page", "size", "pages", "has_next", "has_prev"],
        "title": "PaginationMeta",
        "description": "Pagination metadata"
      },
      "PayCycleType-Input": {
        "type": "string",
        "enum": ["Year", "Month", "Week", "Day"],
        "title": "PayCycleType",
        "description": "Lohnzahlungszeitraum (LZZ)"
      },
      "PayPeriodResponse": {
        "properties": {
          "paymentPeriod": {
            "$ref": "#/components/schemas/PaymentPeriod-Output"
          },
          "employeeId": {
            "type": "integer",
            "title": "Employeeid"
          },
          "currentPayPeriod": {
            "$ref": "#/components/schemas/PayrollAmountsResponse"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["paymentPeriod", "employeeId", "currentPayPeriod"],
        "title": "PayPeriodResponse"
      },
      "PaymentPeriod-Output": {
        "type": "string",
        "enum": ["Year", "Month", "Week", "Day"],
        "title": "PaymentPeriod",
        "description": "Lohnzahlungszeitraum (LZZ)"
      },
      "PayrollAmountsResponse": {
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/PayrollResponseBase"
          },
          "employer": {
            "$ref": "#/components/schemas/EmployerLiabilitiesResponse"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employee", "employer"],
        "title": "PayrollAmountsResponse"
      },
      "PayrollRequest2025": {
        "properties": {
          "payrollRun": {
            "items": {
              "$ref": "#/components/schemas/payroll__germany__schemas__PayrollRequestBase"
            },
            "type": "array",
            "title": "Payrollrun"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["payrollRun"],
        "title": "PayrollRequest2025",
        "description": "Input parameters according to PAP2025",
        "examples": [
          {
            "payrollRun": [
              {
                "careInsuranceChildren": 2,
                "childAllowances": 2,
                "churchTaxState": "Berlin",
                "employeeId": 100,
                "grossWages": 54000,
                "healthInsuranceType": "Statutory KV",
                "healthInsurer": "TK",
                "inSaxony": false,
                "isChurchMember": true,
                "paymentPeriod": "Year",
                "pensionInsuranceType": "Statutory",
                "taxClass": "1",
                "yearOfBirth": 1960
              }
            ]
          },
          {
            "payrollRun": [
              {
                "careInsuranceChildren": 1,
                "childAllowances": 1.5,
                "employeeId": 101,
                "grossWages": 4500,
                "healthInsuranceType": "Private KV with employer subsidy",
                "healthInsurer": "OTHER",
                "inSaxony": true,
                "isChurchMember": false,
                "paymentPeriod": "Month",
                "pensionInsuranceType": "Statutory",
                "privateInsuranceMonthly": 400.0,
                "taxClass": "3",
                "yearOfBirth": 1985
              }
            ]
          }
        ],
        "x-order": ["payrollRun"]
      },
      "PayrollResponse2025": {
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/PayrollAmountsResponse"
          },
          "grossToNet": {
            "items": {
              "$ref": "#/components/schemas/PayPeriodResponse"
            },
            "type": "array",
            "title": "Grosstonet"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["summary", "grossToNet"],
        "title": "PayrollResponse2025",
        "description": "Output parameters according to PAP2025"
      },
      "PayrollResponseBase": {
        "properties": {
          "grossWages": {
            "type": "string",
            "title": "Grosswages",
            "description": "Steuerpflichtiger Arbeitslohn (RE4) - Taxable wages for the period",
            "default": "0.00"
          },
          "healthInsuranceAdditionalRate": {
            "type": "string",
            "title": "Healthinsuranceadditionalrate",
            "default": "0.00"
          },
          "wageTax": {
            "type": "string",
            "title": "Wagetax",
            "description": "Lohnsteuer (LSTLZZ) - Wage tax for the period",
            "default": "0.00"
          },
          "solidaritySurcharge": {
            "type": "string",
            "title": "Solidaritysurcharge",
            "description": "Solidaritätszuschlag (SOLZLZZ) - Solidarity surcharge for the period",
            "default": "0.00"
          },
          "churchTaxAssessmentBasis": {
            "type": "string",
            "title": "Churchtaxassessmentbasis"
          },
          "churchTax": {
            "type": "string",
            "title": "Churchtax",
            "description": "Bemessungsgrundlage Kirchensteuer (BK) - Church tax base amount",
            "default": "0.00"
          },
          "pensionContribution": {
            "type": "string",
            "title": "Pensioncontribution",
            "description": "",
            "default": "0.00"
          },
          "healthInsuranceContribution": {
            "type": "string",
            "title": "Healthinsurancecontribution",
            "description": "Vorsorgepauschale (VKVLZZ) - Insurance allowance for the period",
            "default": "0.00"
          },
          "careInsuranceContribution": {
            "type": "string",
            "title": "Careinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "unemploymentInsuranceContribution": {
            "type": "string",
            "title": "Unemploymentinsurancecontribution",
            "description": "",
            "default": "0.00"
          },
          "netPay": {
            "type": "string",
            "title": "Netpay",
            "description": "Nettoverdienst - Net Pay for the period",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PayrollResponseBase"
      },
      "PayrunStatus": {
        "type": "string",
        "enum": ["draft", "approved", "paid"],
        "title": "PayrunStatus",
        "description": "Payrun status"
      },
      "PensionInsuranceType": {
        "type": "string",
        "enum": ["Statutory", "Other"],
        "title": "PensionInsuranceType",
        "description": "Merker für die Vorsorgepauschale (KRV)"
      },
      "PhoneType": {
        "type": "string",
        "enum": ["mobile", "home", "work"],
        "title": "PhoneType"
      },
      "Phones": {
        "properties": {
          "phoneNumber": {
            "type": "string",
            "format": "phone",
            "title": "Phonenumber"
          },
          "phoneType": {
            "$ref": "#/components/schemas/PhoneType"
          },
          "isPrimary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isprimary",
            "description": "Is this the primary phone number for the employee?",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["phoneNumber", "phoneType"],
        "title": "Phones"
      },
      "Region": {
        "type": "string",
        "enum": ["England/NI", "Scotland", "Wales"],
        "title": "Region",
        "description": "UK Tax Regions"
      },
      "Reimbursement-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Reimbursement"
      },
      "ReimbursementResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ReimbursementResponse"
      },
      "RelatedPersonsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Dependent name"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relationship"
          },
          "emergencyContact": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergencycontact",
            "default": false
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt"],
        "title": "RelatedPersonsResponse",
        "description": "Response model for related persons with metadata fields."
      },
      "RiskTariff-Input": {
        "properties": {
          "tariffCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffcode",
            "description": "EN: UV risk tariff code | DE: UV-Risikotarifcode"
          },
          "tariffDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffdescription",
            "description": "EN: UV risk tariff description | DE: UV-Risikotarifbeschreibung"
          },
          "tariffPercentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffpercentage",
            "description": "EN: UV risk tariff percentage | DE: UV-Risikotarifprozentsatz",
            "default": "0"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "RiskTariff",
        "description": "Schema for UV risk tariff details of a German employee."
      },
      "RiskTariff-Output": {
        "properties": {
          "tariffCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffcode",
            "description": "EN: UV risk tariff code | DE: UV-Risikotarifcode"
          },
          "tariffDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffdescription",
            "description": "EN: UV risk tariff description | DE: UV-Risikotarifbeschreibung"
          },
          "tariffPercentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tariffpercentage",
            "description": "EN: UV risk tariff percentage | DE: UV-Risikotarifprozentsatz",
            "default": "0"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "RiskTariff",
        "description": "Schema for UV risk tariff details of a German employee."
      },
      "RunDetails": {
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^run_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'run'",
            "example": "run_01h455vb4pex5vsknk084sn02q"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref"
          },
          "status": {
            "$ref": "#/components/schemas/PayrunStatus"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "externalRef", "status"],
        "title": "RunDetails"
      },
      "SalariedEarnings": {
        "properties": {
          "earningType": {
            "type": "string",
            "const": "Salary",
            "title": "Earningtype"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount",
            "description": "Earnings amount (taxable gross)"
          },
          "earningFrequency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PayCycleType-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "If recurring, specify the frequency",
            "default": "Month"
          },
          "isLumpsum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Islumpsum",
            "description": "True if onetime (Einmalig). False if recurring (Laufend)",
            "default": false
          },
          "doGrossup": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dogrossup",
            "description": "True if the amount needs to be grossed up",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earningType", "amount"],
        "title": "SalariedEarnings"
      },
      "SepaMandateRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "mandateReference": {
            "type": "string",
            "title": "Mandatereference"
          },
          "agencyId": {
            "type": "integer",
            "title": "Agencyid"
          },
          "bankAccountId": {
            "type": "string",
            "pattern": "^ban_[0-9a-v]{26}$",
            "title": "Bankaccountid",
            "description": "TypeID with prefix 'ban'",
            "example": "ban_01h455vb4pex5vsknk084sn02q"
          },
          "isRecurring": {
            "type": "boolean",
            "title": "Isrecurring",
            "default": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["mandateReference", "agencyId", "bankAccountId"],
        "title": "SepaMandateRequest"
      },
      "SepaMandateResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "mandateReference": {
            "type": "string",
            "title": "Mandatereference"
          },
          "agencyId": {
            "type": "integer",
            "title": "Agencyid"
          },
          "bankAccountId": {
            "type": "string",
            "pattern": "^ban_[0-9a-v]{26}$",
            "title": "Bankaccountid",
            "description": "TypeID with prefix 'ban'",
            "example": "ban_01h455vb4pex5vsknk084sn02q"
          },
          "isRecurring": {
            "type": "boolean",
            "title": "Isrecurring"
          },
          "id": {
            "type": "string",
            "pattern": "^mnd_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'mnd'",
            "example": "mnd_01h455vb4pex5vsknk084sn02q"
          },
          "createdBy": {
            "type": "string",
            "title": "Createdby"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "mandateReference",
          "agencyId",
          "bankAccountId",
          "isRecurring",
          "id",
          "createdBy"
        ],
        "title": "SepaMandateResponse"
      },
      "SepaMandateUpdateRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "mandateReference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mandatereference"
          },
          "agencyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agencyid"
          },
          "bankAccountId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^ban_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'ban'",
                "example": "ban_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bankaccountid"
          },
          "isRecurring": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isrecurring"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SepaMandateUpdateRequest"
      },
      "SortOrder": {
        "type": "string",
        "enum": ["asc", "desc"],
        "title": "SortOrder"
      },
      "StudentLoanPlanType": {
        "type": "string",
        "enum": ["Plan1", "Plan2", "Plan4"],
        "title": "StudentLoanPlanType",
        "description": "Types of student loan plans"
      },
      "Summary": {
        "properties": {
          "employer": {
            "$ref": "#/components/schemas/EmployerSummary"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Summary"
      },
      "SupportedHealthInsurers": {
        "type": "string",
        "enum": ["AOK", "BARMER", "DAK", "IKK", "TK", "OTHER"],
        "title": "SupportedHealthInsurers",
        "description": "Supported health insurers"
      },
      "TaxAttributes": {
        "properties": {
          "taxClass": {
            "$ref": "#/components/schemas/TaxClassType",
            "description": "Steuerklasse (STKL) - Tax class"
          },
          "isFactor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isfactor",
            "description": "Faktorverfahren (AF) - Factor procedure flag (only for tax class IV)",
            "default": false
          },
          "factor": {
            "anyOf": [
              {
                "type": "number",
                "multipleOf": 0.001,
                "exclusiveMaximum": 1.0,
                "minimum": 0.001
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Factor",
            "description": "Faktor (F) - Factor for factor procedure"
          },
          "childAllowances": {
            "anyOf": [
              {
                "type": "number",
                "multipleOf": 0.5,
                "maximum": 9.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Childallowances",
            "description": "Kinderfreibeträge (ZKF) - Number of child allowances (decimal place for shared allowances)",
            "default": "0"
          },
          "isChurchMember": {
            "type": "boolean",
            "title": "Ischurchmember",
            "description": "Religionsgemeinschaft (R) - Church membership",
            "default": false
          },
          "taxState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanStates"
              },
              {
                "type": "null"
              }
            ],
            "description": "Bundesländer - Residency state",
            "default": "Berlin"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["taxClass"],
        "title": "TaxAttributes"
      },
      "TaxClass": {
        "type": "string",
        "enum": ["1", "2", "3", "4", "5", "6"],
        "title": "TaxClass",
        "description": "Steuerklasse (STKL)"
      },
      "TaxClassType": {
        "type": "string",
        "enum": ["1", "2", "3", "4", "5", "6"],
        "title": "TaxClassType",
        "description": "Steuerklasse (STKL)"
      },
      "TaxCode-Input": {
        "properties": {
          "originalCode": {
            "type": "string",
            "title": "Originalcode"
          },
          "personalAllowance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Personalallowance",
            "default": "0"
          },
          "prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefix"
          },
          "prefixMeaning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixmeaning"
          },
          "suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suffix"
          },
          "suffixMeaning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suffixmeaning"
          },
          "emergency": {
            "type": "boolean",
            "title": "Emergency",
            "default": false
          },
          "region": {
            "$ref": "#/components/schemas/Region",
            "default": "England/NI"
          }
        },
        "type": "object",
        "required": ["originalCode"],
        "title": "TaxCode"
      },
      "TaxCode-Output": {
        "properties": {
          "originalCode": {
            "type": "string",
            "title": "Originalcode"
          },
          "personalAllowance": {
            "type": "string",
            "title": "Personalallowance",
            "default": "0"
          },
          "prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefix"
          },
          "prefixMeaning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixmeaning"
          },
          "suffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suffix"
          },
          "suffixMeaning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suffixmeaning"
          },
          "emergency": {
            "type": "boolean",
            "title": "Emergency",
            "default": false
          },
          "region": {
            "$ref": "#/components/schemas/Region",
            "default": "England/NI"
          }
        },
        "type": "object",
        "required": ["originalCode"],
        "title": "TaxCode"
      },
      "TaxIdentifiersRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "taxData": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UKTaxIdentifier"
                  },
                  {
                    "$ref": "#/components/schemas/USTaxIdentifier"
                  },
                  {
                    "$ref": "#/components/schemas/GermanTaxIdentifier"
                  }
                ],
                "discriminator": {
                  "propertyName": "country",
                  "mapping": {
                    "DE": "#/components/schemas/GermanTaxIdentifier",
                    "GB": "#/components/schemas/UKTaxIdentifier",
                    "US": "#/components/schemas/USTaxIdentifier"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxdata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "TaxIdentifiersRequest"
      },
      "TaxIdentifiersResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "taxData": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UKTaxIdentifier"
                  },
                  {
                    "$ref": "#/components/schemas/USTaxIdentifier"
                  },
                  {
                    "$ref": "#/components/schemas/GermanTaxIdentifier"
                  }
                ],
                "discriminator": {
                  "propertyName": "country",
                  "mapping": {
                    "DE": "#/components/schemas/GermanTaxIdentifier",
                    "GB": "#/components/schemas/UKTaxIdentifier",
                    "US": "#/components/schemas/USTaxIdentifier"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxdata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id"],
        "title": "TaxIdentifiersResponse"
      },
      "UKBusinessType": {
        "type": "string",
        "enum": [
          "Sole Trader",
          "Partnership",
          "Limited Company",
          "Public Limited Company",
          "Limited Liability Partnership",
          "Community Interest Company"
        ],
        "title": "UKBusinessType"
      },
      "UKEmployee": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref",
            "description": "EN: External reference | DE: Externe Referenz"
          },
          "startDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startdate",
            "description": "EN: Employment start date | DE: Beschäftigungsbeginn"
          },
          "endDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enddate",
            "description": "EN: Employment end date | DE: Beschäftigungsende"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "birthPlace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthplace"
          },
          "birthCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthcountry"
          },
          "personalEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalemail"
          },
          "workEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workemail"
          },
          "phoneNumbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Phones"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phonenumbers",
            "description": "List of phone numbers"
          },
          "personalData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKPersonalData"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Personal data | DE: Personaldaten"
          },
          "relatedPersons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UKFamilyDetails"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relatedpersons",
            "description": "EN: Family details | DE: Familiendaten"
          },
          "jobDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__uk__schema__employee__JobDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Job details | DE: Beschäftigungsdetails"
          },
          "insuranceDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__uk__schema__employee__InsuranceDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Insurance details | DE: Versicherungsdetails"
          },
          "taxDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKTaxDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Tax data | DE: Steuerdaten"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "UKEmployee",
        "description": "Schema for UK employee data.",
        "examples": [{}]
      },
      "UKEmployeeResponse": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref",
            "description": "EN: External reference | DE: Externe Referenz"
          },
          "startDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startdate",
            "description": "EN: Employment start date | DE: Beschäftigungsbeginn"
          },
          "endDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enddate",
            "description": "EN: Employment end date | DE: Beschäftigungsende"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "birthPlace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthplace"
          },
          "birthCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthcountry"
          },
          "personalEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalemail"
          },
          "workEmail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workemail"
          },
          "phoneNumbers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Phones"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phonenumbers",
            "description": "List of phone numbers"
          },
          "personalData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKPersonalDataResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "relatedPersons": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RelatedPersonsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "jobDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__uk__schema__employee__JobDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "insuranceDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__uk__schema__employee__InsuranceDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "taxDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKTaxDetailsResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "personalData",
          "relatedPersons",
          "jobDetails",
          "insuranceDetails",
          "taxDetails"
        ],
        "title": "UKEmployeeResponse"
      },
      "UKEmployeeType": {
        "type": "string",
        "enum": ["Employee", "Worker", "Director"],
        "title": "UKEmployeeType",
        "description": "Employee types recognized in Germany."
      },
      "UKFamilyDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "EN: Dependent name | DE: Name des Angehörigen"
          },
          "birthDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthdate"
          },
          "relationship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relationship"
          },
          "emergencyContact": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergencycontact",
            "default": false
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "UKFamilyDetails",
        "description": "Schema for family-related data of a German employee. Change tracked."
      },
      "UKGender": {
        "type": "string",
        "enum": ["M", "F"],
        "title": "UKGender",
        "description": "Legally recognized genders in Germany."
      },
      "UKJobType": {
        "type": "string",
        "enum": [
          "Full Time Indefinite Term",
          "Full Time Fixed Term",
          "Part Time Indefinite Term",
          "Part Time Fixed Term"
        ],
        "title": "UKJobType",
        "description": "Employment types recognized in Germany."
      },
      "UKPersonalData": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "employeeName": {
            "type": "string",
            "title": "Employeename",
            "description": "Employee name"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKGender"
              },
              {
                "type": "null"
              }
            ],
            "description": "Gender"
          },
          "maritalStatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maritalstatus",
            "description": "Marital status"
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality",
            "description": "Nationality"
          },
          "residenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Residenceaddress",
            "description": "Residence address"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeName"],
        "title": "UKPersonalData",
        "description": "Schema for personal data of UK employee. Change tracked personal data."
      },
      "UKPersonalDataResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "employeeName": {
            "type": "string",
            "title": "Employeename",
            "description": "Employee name"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKGender"
              },
              {
                "type": "null"
              }
            ],
            "description": "Gender"
          },
          "maritalStatus": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maritalstatus",
            "description": "Marital status"
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality",
            "description": "Nationality"
          },
          "residenceAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Residenceaddress",
            "description": "Residence address"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "employeeId",
          "createdAt",
          "updatedAt",
          "employeeName"
        ],
        "title": "UKPersonalDataResponse",
        "description": "Response model for personal data with metadata fields."
      },
      "UKTaxDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "taxCode": {
            "$ref": "#/components/schemas/TaxCode-Input",
            "description": "HMRC Tax code (e.g., '1257L', 'K475', 'BR')"
          },
          "studentLoanType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentLoanPlanType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Student loan type"
          },
          "postgraduateLoan": {
            "type": "boolean",
            "title": "Postgraduateloan",
            "description": "Postgraduate loan?",
            "default": false
          },
          "p45GrossPay": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "P45Grosspay",
            "description": "P45 gross pay",
            "default": "0.00"
          },
          "p45TaxAmount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "P45Taxamount",
            "description": "P45 tax amount",
            "default": "0.00"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["taxCode"],
        "title": "UKTaxDetails"
      },
      "UKTaxDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "taxCode": {
            "$ref": "#/components/schemas/TaxCode-Output"
          },
          "studentLoanType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentLoanPlanType"
              },
              {
                "type": "null"
              }
            ]
          },
          "postgraduateLoan": {
            "type": "boolean",
            "title": "Postgraduateloan",
            "default": false
          },
          "p45GrossPay": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "P45Grosspay",
            "default": "0.00"
          },
          "p45TaxAmount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "P45Taxamount",
            "default": "0.00"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt", "taxCode"],
        "title": "UKTaxDetailsResponse",
        "description": "Response model for tax details with metadata fields."
      },
      "UKTaxIdentifier": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "country": {
            "type": "string",
            "const": "GB",
            "title": "Country"
          },
          "businessType": {
            "$ref": "#/components/schemas/UKBusinessType"
          },
          "payeReferenceNumber": {
            "type": "string",
            "title": "Payereferencenumber"
          },
          "accountsOfficeReference": {
            "type": "string",
            "title": "Accountsofficereference"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "country",
          "businessType",
          "payeReferenceNumber",
          "accountsOfficeReference"
        ],
        "title": "UKTaxIdentifier"
      },
      "USTaxIdentifier": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "country": {
            "type": "string",
            "const": "US",
            "title": "Country"
          },
          "ein": {
            "type": "string",
            "title": "Ein"
          },
          "businessType": {
            "$ref": "#/components/schemas/BusinessType"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["country", "ein", "businessType"],
        "title": "USTaxIdentifier"
      },
      "UmlageRates": {
        "properties": {
          "levyType": {
            "type": "string",
            "title": "Levytype",
            "examples": ["U1"]
          },
          "reimbursementRate": {
            "type": "integer",
            "title": "Reimbursementrate",
            "examples": [70]
          },
          "contributionRate": {
            "type": "string",
            "title": "Contributionrate",
            "examples": ["0.024"]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["levyType", "reimbursementRate", "contributionRate"],
        "title": "UmlageRates",
        "examples": [
          {
            "contributionRate": "0.024",
            "levyType": "U1",
            "reimbursementRate": 70
          }
        ]
      },
      "VWL": {
        "properties": {
          "employeeContribution": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employeecontribution",
            "description": "VWL AN",
            "default": "0.00"
          },
          "employerContribution": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Employercontribution",
            "description": "VWL AG",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "VWL"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "WorkSiteRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Isprimary"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "taxIdentifiers": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersRequest"
            },
            "type": "array",
            "title": "Taxidentifiers",
            "default": []
          },
          "insuranceData": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorksiteInsuranceDataRequest"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancedata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "address", "isActive", "isPrimary"],
        "title": "WorkSiteRequest"
      },
      "WorkSiteResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "type": "string",
            "title": "Address"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive"
          },
          "isPrimary": {
            "type": "boolean",
            "title": "Isprimary"
          },
          "id": {
            "type": "string",
            "pattern": "^wst_[0-9a-v]{26}$",
            "title": "Id",
            "description": "TypeID with prefix 'wst'",
            "example": "wst_01h455vb4pex5vsknk084sn02q"
          },
          "orgId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^org_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'org'",
                "example": "org_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgid"
          },
          "contacts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContactResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts"
          },
          "taxIdentifiers": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersResponse"
            },
            "type": "array",
            "title": "Taxidentifiers",
            "default": []
          },
          "insuranceData": {
            "items": {
              "$ref": "#/components/schemas/WorksiteInsuranceDataResponse"
            },
            "type": "array",
            "title": "Insurancedata",
            "default": []
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address",
          "isActive",
          "isPrimary",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "WorkSiteResponse"
      },
      "WorkSiteUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "isActive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isactive"
          },
          "isPrimary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isprimary"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "WorkSiteUpdateRequest"
      },
      "WorksiteInsuranceDataRequest": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "worksiteLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksitelocationnumber",
            "description": "DE: BBNRVU"
          },
          "accidentInsuranceCompanyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancecompanynumber",
            "description": "DE: BBNR UV"
          },
          "accidentInsurancePin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancepin",
            "description": "DE: UV PIN"
          },
          "payrollServiceProviderNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollserviceprovidernumber",
            "description": "DE: BBNR AS"
          },
          "payrollProcessingLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollprocessinglocationnumber",
            "description": "DE: BBNR LB"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "WorksiteInsuranceDataRequest"
      },
      "WorksiteInsuranceDataResponse": {
        "properties": {
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "worksiteLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksitelocationnumber",
            "description": "DE: BBNRVU"
          },
          "accidentInsuranceCompanyNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancecompanynumber",
            "description": "DE: BBNR UV"
          },
          "accidentInsurancePin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accidentinsurancepin",
            "description": "DE: UV PIN"
          },
          "payrollServiceProviderNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollserviceprovidernumber",
            "description": "DE: BBNR AS"
          },
          "payrollProcessingLocationNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payrollprocessinglocationnumber",
            "description": "DE: BBNR LB"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id"],
        "title": "WorksiteInsuranceDataResponse"
      },
      "WorksiteTaxIdentifiersListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TaxIdentifiersResponse"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["data"],
        "title": "WorksiteTaxIdentifiersListResponse"
      },
      "payroll__germany__payroll_types__PayCycleType": {
        "type": "string",
        "enum": ["Year", "Month", "Week", "Day"],
        "title": "PayCycleType",
        "description": "Lohnzahlungszeitraum (LZZ)"
      },
      "payroll__germany__schema__employee__InsuranceDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "insuranceNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancenumber",
            "description": "EN: Health insurance number | DE: Versicherungsnummer"
          },
          "contributionGroup": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 4,
                "minLength": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributiongroup",
            "description": "EN: Contribution group | DE: Beitragsgruppe"
          },
          "personGroup": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Persongroup",
            "description": "EN: Person group | DE: Personengruppe"
          },
          "insuranceProvider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insuranceprovider",
            "description": "EN: Health insurance provider | DE: Krankenkasse"
          },
          "alternateCollectionAgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternatecollectionagency",
            "description": "EN: Alternate collection agency | DE: Einzugsstelle"
          },
          "privateInsuranceHealthMonthly": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancehealthmonthly",
            "description": "EN:Private health insurance monthly|DE:Private Krankenversicherung monatlich",
            "default": "0"
          },
          "privateInsuranceCareMonthly": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancecaremonthly",
            "description": "EN: Private care insurance monthly | DE: Private Pflegeversicherung monatlich",
            "default": "0"
          },
          "careInsuranceChildren": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Careinsurancechildren",
            "description": "EN: Children for care insurance | DE: Kinder für Pflegeversicherung",
            "default": 0
          },
          "u1Exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "U1Exempt",
            "description": "EN: U1 exemption | DE: U1 Befreiung"
          },
          "u2Exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "U2Exempt",
            "description": "EN: U2 exemption | DE: U2 Befreiung"
          },
          "uvRiskTariff": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RiskTariff-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uvrisktariff",
            "description": "EN: UV risk tariff details | DE: UV-Risikotarifdetails"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "InsuranceDetails"
      },
      "payroll__germany__schema__employee__InsuranceDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "insuranceNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancenumber"
          },
          "contributionGroup": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributiongroup"
          },
          "personGroup": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Persongroup"
          },
          "insuranceProvider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insuranceprovider"
          },
          "alternateCollectionAgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alternatecollectionagency",
            "description": "EN: Alternate collection agency | DE: Einzugsstelle"
          },
          "privateInsuranceHealthMonthly": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancehealthmonthly",
            "description": "EN:Private health insurance monthly|DE:Private Krankenversicherung monatlich",
            "default": "0"
          },
          "privateInsuranceCareMonthly": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancecaremonthly",
            "description": "EN: Private care insurance monthly | DE: Private Pflegeversicherung monatlich",
            "default": "0"
          },
          "careInsuranceChildren": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Careinsurancechildren",
            "default": 0
          },
          "u1Exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "U1Exempt",
            "default": false
          },
          "u2Exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "U2Exempt",
            "default": false
          },
          "uvRiskTariff": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RiskTariff-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uvrisktariff",
            "description": "EN: UV risk tariff details | DE: UV-Risikotarifdetails"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt"],
        "title": "InsuranceDetailsResponse",
        "description": "Response model for insurance details with metadata fields."
      },
      "payroll__germany__schema__employee__JobDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "jobType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanJobType"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Employment type | DE: Beschäftigungsart"
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanEmployeeType"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Employee type | DE: Mitarbeitertyp"
          },
          "jobTitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobtitle",
            "description": "EN: Job title | DE: Berufsbezeichnung"
          },
          "jobDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobdescription",
            "description": "EN: Job description | DE: Stellenbeschreibung"
          },
          "occupationCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupationcode",
            "description": "EN: Occupation code  | DE: Tätigkeitsschlüssel"
          },
          "contractedWeeklyHours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractedweeklyhours",
            "description": "EN: Contracted weekly hours | DE: Vertraglich vereinbarte Wochenstunden",
            "default": 40
          },
          "contractedToOtherCompany": {
            "type": "boolean",
            "title": "Contractedtoothercompany",
            "description": "EN: Contracted to another company | DE: Vertrag mit anderem",
            "default": false
          },
          "worksiteId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^wst_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'wst'",
                "example": "wst_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksiteid",
            "description": "EN: Work location | DE: Arbeitsort"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department",
            "description": "EN: Department | DE: Abteilung"
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "JobDetails",
        "description": "Schema for job-related data of a German employee.\nSupports both standalone and integrated requests."
      },
      "payroll__germany__schema__employee__JobDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "DE",
            "title": "Employmentcountry",
            "default": "DE"
          },
          "jobType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanJobType"
              },
              {
                "type": "null"
              }
            ]
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanEmployeeType"
              },
              {
                "type": "null"
              }
            ]
          },
          "jobTitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobtitle"
          },
          "jobDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobdescription"
          },
          "occupationCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Occupationcode"
          },
          "contractedWeeklyHours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractedweeklyhours",
            "default": 40
          },
          "contractedToOtherCompany": {
            "type": "boolean",
            "title": "Contractedtoothercompany",
            "description": "EN: Contracted to another company | DE: Vertrag mit anderem",
            "default": false
          },
          "worksiteId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^wst_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'wst'",
                "example": "wst_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksiteid"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt"],
        "title": "JobDetailsResponse",
        "description": "Response model for job details with metadata fields."
      },
      "payroll__germany__schema__request__Deductions": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeductionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["amount"],
        "title": "Deductions"
      },
      "payroll__germany__schema__request__Gross": {
        "properties": {
          "earnings": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SalariedEarnings"
                    },
                    {
                      "$ref": "#/components/schemas/HourlyEarnings"
                    },
                    {
                      "$ref": "#/components/schemas/OtherEarnings"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Earnings"
          },
          "benefits": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Car"
                    },
                    {
                      "$ref": "#/components/schemas/NonCarBenefits"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                      "Allowances": "#/components/schemas/NonCarBenefits",
                      "Capital-forming": "#/components/schemas/NonCarBenefits",
                      "Company Car": "#/components/schemas/Car",
                      "Company Pension": "#/components/schemas/NonCarBenefits",
                      "Gym": "#/components/schemas/NonCarBenefits",
                      "Meal Plan": "#/components/schemas/NonCarBenefits",
                      "Other": "#/components/schemas/NonCarBenefits"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Benefits"
          },
          "deductions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/payroll__germany__schema__request__Deductions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deductions"
          },
          "reimbursements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/payroll__germany__schema__request__Reimbursement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reimbursements"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earnings", "benefits"],
        "title": "Gross"
      },
      "payroll__germany__schema__request__InsuranceDetails": {
        "properties": {
          "pensionInsuranceType": {
            "$ref": "#/components/schemas/PensionInsuranceType",
            "description": "Rentenversicherung (KRV) - Pension insurance type"
          },
          "healthInsuranceType": {
            "$ref": "#/components/schemas/HealthInsuranceType",
            "description": "Krankenversicherung (PKV) - Health insurance type"
          },
          "healthInsurerAgencyCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Healthinsureragencycode",
            "description": "Krankenversicherungscode (KVK) - Health insurer agency code"
          },
          "privateInsuranceMonthly": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancemonthly",
            "description": "Private Krankenversicherung (PKPV) - Monthly private health/care insurance contribution",
            "default": "0"
          },
          "careInsuranceChildren": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Careinsurancechildren",
            "description": "Anzahl Kinder Pflegeversicherung (PVA) - Number of children for care insurance discount (0-5), choose 5 for 5 or more",
            "default": 0
          },
          "isMidiJob": {
            "type": "boolean",
            "title": "Ismidijob",
            "description": "Whether the employee is a midi-jobber",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["pensionInsuranceType", "healthInsuranceType"],
        "title": "InsuranceDetails"
      },
      "payroll__germany__schema__request__PayrollRequest": {
        "properties": {
          "payDate": {
            "type": "string",
            "format": "date",
            "title": "Paydate",
            "description": "Payment Date for this payroll"
          },
          "payCycle": {
            "$ref": "#/components/schemas/PayCycleType-Input"
          },
          "payrollGroup": {
            "items": {
              "$ref": "#/components/schemas/payroll__germany__schema__request__PayrollRequestBase"
            },
            "type": "array",
            "title": "Payrollgroup"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["payCycle", "payrollGroup"],
        "title": "PayrollRequest",
        "description": "Input parameters according to PAP2025",
        "examples": [
          {
            "payCycle": "Month",
            "payrollGroup": [
              {
                "employeeDetails": {
                  "employeeId": 100,
                  "yearOfBirth": 1962
                },
                "insuranceDetails": {
                  "careInsuranceChildren": 0,
                  "healthInsuranceType": "Private KV with employer subsidy",
                  "healthInsurerAgencyCode": "1528962",
                  "pensionInsuranceType": "Statutory",
                  "privateInsuranceMonthly": 741.68
                },
                "payDetails": {
                  "benefits": [
                    {
                      "additionalPayments": -137.0,
                      "name": "Company Car",
                      "privateTrip": 573
                    },
                    {
                      "employerShare": 26.6,
                      "name": "Capital-forming"
                    },
                    {
                      "employeeShare": 1109.24,
                      "name": "Company Pension"
                    }
                  ],
                  "deductions": [
                    {
                      "amount": 100,
                      "name": "Loan Repayment"
                    }
                  ],
                  "earnings": [
                    {
                      "amount": 10554.16,
                      "earningFrequency": "Month",
                      "earningType": "Salary"
                    },
                    {
                      "amount": 102,
                      "earningFrequency": "Month",
                      "earningType": "Allowances"
                    },
                    {
                      "amount": 1.28,
                      "earningFrequency": "Month",
                      "earningType": "Other"
                    }
                  ],
                  "reimbursements": [
                    {
                      "amount": 1000,
                      "name": "Trip to USA"
                    }
                  ]
                },
                "taxAttributes": {
                  "childAllowances": 0,
                  "isChurchMember": false,
                  "taxClass": "3",
                  "taxState": "Berlin"
                }
              }
            ]
          }
        ]
      },
      "payroll__germany__schema__request__PayrollRequestBase": {
        "properties": {
          "employeeDetails": {
            "$ref": "#/components/schemas/EmployeeDetails"
          },
          "taxAttributes": {
            "$ref": "#/components/schemas/TaxAttributes"
          },
          "insuranceDetails": {
            "$ref": "#/components/schemas/payroll__germany__schema__request__InsuranceDetails"
          },
          "payDetails": {
            "$ref": "#/components/schemas/payroll__germany__schema__request__Gross"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "employeeDetails",
          "taxAttributes",
          "insuranceDetails",
          "payDetails"
        ],
        "title": "PayrollRequestBase",
        "description": "Input parameters"
      },
      "payroll__germany__schema__request__Reimbursement": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "amount"],
        "title": "Reimbursement"
      },
      "payroll__germany__schema__response__CurrentPayPeriod": {
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__EmployeeCurrentPayPeriod"
          },
          "employer": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__EmployerCurrentPayPeriod"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "CurrentPayPeriod"
      },
      "payroll__germany__schema__response__EmployeeCurrentPayPeriod": {
        "properties": {
          "totals": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__EmployeeTotals"
          },
          "taxes": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__EmployeeTaxes"
          },
          "insurance": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__EmployeeInsurance"
          },
          "deductions": {
            "items": {
              "$ref": "#/components/schemas/Deduction"
            },
            "type": "array",
            "title": "Deductions"
          },
          "reimbursements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Reimbursement-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reimbursements"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeCurrentPayPeriod"
      },
      "payroll__germany__schema__response__EmployeeInsurance": {
        "properties": {
          "insuranceAssessmentBase": {
            "type": "string",
            "title": "Insuranceassessmentbase",
            "default": "0.00"
          },
          "pensionAssessmentBase": {
            "type": "string",
            "title": "Pensionassessmentbase",
            "default": "0.00"
          },
          "healthInsuranceAdditionalRate": {
            "type": "string",
            "title": "Healthinsuranceadditionalrate",
            "default": "0.00"
          },
          "pensionInsurance": {
            "type": "string",
            "title": "Pensioninsurance",
            "default": "0.00"
          },
          "unemploymentInsurance": {
            "type": "string",
            "title": "Unemploymentinsurance",
            "default": "0.00"
          },
          "healthInsurance": {
            "type": "string",
            "title": "Healthinsurance",
            "default": "0.00"
          },
          "careInsurance": {
            "type": "string",
            "title": "Careinsurance",
            "default": "0.00"
          },
          "totalInsurance": {
            "type": "string",
            "title": "Totalinsurance",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeInsurance"
      },
      "payroll__germany__schema__response__EmployeeTaxes": {
        "properties": {
          "incomeTaxAssessmentBase": {
            "type": "string",
            "title": "Incometaxassessmentbase",
            "default": "0.00"
          },
          "solidarityTaxAssessmentBase": {
            "type": "string",
            "title": "Solidaritytaxassessmentbase",
            "default": "0.00"
          },
          "incomeTax": {
            "type": "string",
            "title": "Incometax",
            "default": "0.00"
          },
          "churchTax": {
            "type": "string",
            "title": "Churchtax",
            "default": "0.00"
          },
          "solidarityTax": {
            "type": "string",
            "title": "Solidaritytax",
            "default": "0.00"
          },
          "totalTax": {
            "type": "string",
            "title": "Totaltax",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeTaxes"
      },
      "payroll__germany__schema__response__EmployeeTotals": {
        "properties": {
          "totalGrossWages": {
            "type": "string",
            "title": "Totalgrosswages",
            "default": "0.00"
          },
          "taxableGrossWages": {
            "type": "string",
            "title": "Taxablegrosswages",
            "default": "0.00"
          },
          "netWages": {
            "type": "string",
            "title": "Netwages",
            "default": "0.00"
          },
          "totalDeductions": {
            "type": "string",
            "title": "Totaldeductions",
            "default": "0.00"
          },
          "totalReimbursements": {
            "type": "string",
            "title": "Totalreimbursements",
            "default": "0.00"
          },
          "netPay": {
            "type": "string",
            "title": "Netpay",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeTotals"
      },
      "payroll__germany__schema__response__EmployerCurrentPayPeriod": {
        "properties": {
          "pensionContribution": {
            "type": "string",
            "title": "Pensioncontribution",
            "default": "0.00"
          },
          "healthInsuranceContribution": {
            "type": "string",
            "title": "Healthinsurancecontribution",
            "default": "0.00"
          },
          "careInsuranceContribution": {
            "type": "string",
            "title": "Careinsurancecontribution",
            "default": "0.00"
          },
          "unemploymentInsuranceContribution": {
            "type": "string",
            "title": "Unemploymentinsurancecontribution",
            "default": "0.00"
          },
          "sickPayInsuranceContribution": {
            "type": "string",
            "title": "Sickpayinsurancecontribution",
            "default": "0.00"
          },
          "maternityPayInsuranceContribution": {
            "type": "string",
            "title": "Maternitypayinsurancecontribution",
            "default": "0.00"
          },
          "insolvencyInsuranceContribution": {
            "type": "string",
            "title": "Insolvencyinsurancecontribution",
            "default": "0.00"
          },
          "totalBurden": {
            "type": "string",
            "title": "Totalburden",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployerCurrentPayPeriod"
      },
      "payroll__germany__schema__response__PayrollResponse": {
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "payslips": {
            "items": {
              "$ref": "#/components/schemas/payroll__germany__schema__response__Payslip"
            },
            "type": "array",
            "title": "Payslips"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["payslips"],
        "title": "PayrollResponse"
      },
      "payroll__germany__schema__response__Payslip": {
        "properties": {
          "paymentPeriod": {
            "$ref": "#/components/schemas/payroll__germany__payroll_types__PayCycleType",
            "default": "Month"
          },
          "employeeId": {
            "type": "integer",
            "title": "Employeeid"
          },
          "currentPayPeriod": {
            "$ref": "#/components/schemas/payroll__germany__schema__response__CurrentPayPeriod"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeId", "currentPayPeriod"],
        "title": "Payslip"
      },
      "payroll__germany__schemas__Earnings": {
        "properties": {
          "regularWages": {
            "$ref": "#/components/schemas/BaseSalary"
          },
          "onetimeIncome": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Onetimeincome",
            "description": "Einmalzahlungen",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["regularWages"],
        "title": "Earnings"
      },
      "payroll__germany__schemas__PaymentPeriod": {
        "type": "string",
        "enum": ["Year", "Month", "Week", "Day"],
        "title": "PaymentPeriod",
        "description": "Lohnzahlungszeitraum (LZZ)"
      },
      "payroll__germany__schemas__PayrollRequestBase": {
        "properties": {
          "employeeId": {
            "type": "integer",
            "title": "Employeeid",
            "description": "Mitarbeiterkennzeichen - Employee identification number"
          },
          "yearOfBirth": {
            "type": "integer",
            "maximum": 2025.0,
            "minimum": 1850.0,
            "title": "Yearofbirth",
            "description": "Geburtsjahr - Birth Year to check eligibility for Altersentlastungsbetrag"
          },
          "grossWages": {
            "$ref": "#/components/schemas/GrossWages"
          },
          "taxClass": {
            "$ref": "#/components/schemas/TaxClass",
            "description": "Steuerklasse (STKL) - Tax class"
          },
          "pensionInsuranceType": {
            "$ref": "#/components/schemas/PensionInsuranceType",
            "description": "Rentenversicherung (KRV) - Pension insurance type"
          },
          "healthInsuranceType": {
            "$ref": "#/components/schemas/HealthInsuranceType",
            "description": "Krankenversicherung (PKV) - Health insurance type"
          },
          "healthInsurer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SupportedHealthInsurers"
              },
              {
                "type": "null"
              }
            ],
            "description": "Health insurer"
          },
          "healthInsurerAgencyCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Healthinsureragencycode",
            "description": "Krankenversicherungscode (KVK) - Health insurer agency code"
          },
          "childAllowances": {
            "anyOf": [
              {
                "type": "number",
                "multipleOf": 0.5,
                "maximum": 9.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Childallowances",
            "description": "Kinderfreibeträge (ZKF) - Number of child allowances (decimal place for shared allowances)",
            "default": 0.0
          },
          "isChurchMember": {
            "type": "boolean",
            "title": "Ischurchmember",
            "description": "Religionsgemeinschaft (R) - Church membership",
            "default": false
          },
          "churchTaxState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GermanStates"
              },
              {
                "type": "null"
              }
            ],
            "description": "Religionsgemeinschaft (R) - Church membership state"
          },
          "inSaxony": {
            "type": "boolean",
            "title": "Insaxony",
            "description": "Sachsen-Indikator (PVS) - Special case for Saxony care insurance (1=yes)",
            "default": false
          },
          "careInsuranceChildren": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Careinsurancechildren",
            "description": "Anzahl Kinder Pflegeversicherung (PVA) - Number of children for care insurance discount (0-5), choose 5 for 5 or more",
            "default": 0
          },
          "isFactor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isfactor",
            "description": "Faktorverfahren (AF) - Factor procedure flag (only for tax class IV)",
            "default": false
          },
          "factor": {
            "anyOf": [
              {
                "type": "number",
                "multipleOf": 0.001,
                "exclusiveMaximum": 1.0,
                "minimum": 0.001
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Factor",
            "description": "Faktor (F) - Factor for factor procedure"
          },
          "privateInsuranceMonthly": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privateinsurancemonthly",
            "description": "Private Krankenversicherung (PKPV) - Monthly private health/care insurance contribution",
            "default": 0
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "employeeId",
          "yearOfBirth",
          "grossWages",
          "taxClass",
          "pensionInsuranceType",
          "healthInsuranceType"
        ],
        "title": "PayrollRequestBase",
        "description": "Input parameters according to PAP2025"
      },
      "payroll__uk__schema__employee__InsuranceDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "insuranceNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancenumber",
            "description": "EN: Health insurance number | DE: Versicherungsnummer"
          },
          "insuranceCategory": {
            "$ref": "#/components/schemas/NICCategory"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["insuranceCategory"],
        "title": "InsuranceDetails"
      },
      "payroll__uk__schema__employee__InsuranceDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "insuranceNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurancenumber"
          },
          "insuranceCategory": {
            "$ref": "#/components/schemas/NICCategory"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "employeeId",
          "createdAt",
          "updatedAt",
          "insuranceCategory"
        ],
        "title": "InsuranceDetailsResponse",
        "description": "Response model for insurance details with metadata fields."
      },
      "payroll__uk__schema__employee__JobDetails": {
        "properties": {
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "jobType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKJobType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Employment type | DE: Beschäftigungsart"
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKEmployeeType"
              },
              {
                "type": "null"
              }
            ],
            "description": "EN: Employee Status | DE: Mitarbeitertyp"
          },
          "jobTitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobtitle",
            "description": "EN: Job title | DE: Berufsbezeichnung"
          },
          "jobDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobdescription",
            "description": "EN: Job description | DE: Stellenbeschreibung"
          },
          "contractedWeeklyHours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractedweeklyhours",
            "description": "EN: Contracted weekly hours | DE: Vertraglich vereinbarte Wochenstunden",
            "default": 40
          },
          "worksiteId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^wst_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'wst'",
                "example": "wst_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksiteid",
            "description": "EN: Work location | DE: Arbeitsort"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department",
            "description": "EN: Department | DE: Abteilung"
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "JobDetails",
        "description": "Schema for job-related data of a UK employee.\nSupports both standalone and integrated requests."
      },
      "payroll__uk__schema__employee__JobDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "employmentCountry": {
            "type": "string",
            "const": "GB",
            "title": "Employmentcountry",
            "default": "GB"
          },
          "jobType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKJobType"
              },
              {
                "type": "null"
              }
            ]
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UKEmployeeType"
              },
              {
                "type": "null"
              }
            ]
          },
          "jobTitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobtitle"
          },
          "jobDescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobdescription"
          },
          "contractedWeeklyHours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contractedweeklyhours",
            "default": 40
          },
          "worksiteId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^wst_[0-9a-v]{26}$",
                "description": "TypeID with prefix 'wst'",
                "example": "wst_01h455vb4pex5vsknk084sn02q"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worksiteid"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "title": "Validfrom",
            "description": "EN: Valid from date | DE: Gültig ab Datum"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto",
            "description": "EN: Valid to date | DE: Gültig bis Datum"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "employeeId", "createdAt", "updatedAt"],
        "title": "JobDetailsResponse",
        "description": "Response model for job details with metadata fields."
      },
      "payroll__uk__schema__request__Deductions": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "amount"],
        "title": "Deductions"
      },
      "payroll__uk__schema__request__Earnings": {
        "properties": {
          "earningType": {
            "$ref": "#/components/schemas/EarningType"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount",
            "description": "Earnings amount (taxable gross)"
          },
          "earningFrequency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payroll__uk__uktypes__PaymentPeriod"
              },
              {
                "type": "null"
              }
            ],
            "description": "If recurring, specify the frequency",
            "default": "month"
          },
          "isLumpsum": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Islumpsum",
            "description": "True if onetime. Defaults to False",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earningType", "amount"],
        "title": "Earnings"
      },
      "payroll__uk__schema__request__Gross": {
        "properties": {
          "earnings": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/payroll__uk__schema__request__Earnings"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Earnings"
          },
          "benefits": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Benefits"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Benefits"
          },
          "deductions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/payroll__uk__schema__request__Deductions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deductions"
          },
          "reimbursements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/payroll__uk__schema__request__Reimbursement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reimbursements"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["earnings", "benefits"],
        "title": "Gross"
      },
      "payroll__uk__schema__request__PayrollRequest": {
        "properties": {
          "payDate": {
            "type": "string",
            "format": "date",
            "title": "Paydate",
            "description": "Payment Date for this payroll"
          },
          "payCycle": {
            "$ref": "#/components/schemas/payroll__uk__uktypes__PaymentPeriod",
            "description": ""
          },
          "externalRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externalref",
            "description": "External reference for payroll run"
          },
          "payrollGroup": {
            "items": {
              "$ref": "#/components/schemas/payroll__uk__schema__request__PayrollRequestBase"
            },
            "type": "array",
            "title": "Payrollgroup"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["payCycle", "payrollGroup"],
        "title": "PayrollRequest",
        "description": "Input parameters",
        "examples": [
          {
            "payCycle": "month",
            "payDate": "2024-06-15",
            "payrollGroup": [
              {
                "employeeId": 12345,
                "nationalInsuranceCategory": "A",
                "payDetails": {
                  "benefits": [
                    {
                      "amount": 450.0,
                      "makeGoodAmount": 100.0,
                      "name": "Company Car"
                    },
                    {
                      "amount": 125.5,
                      "name": "Medical Insurance"
                    },
                    {
                      "amount": 50.0,
                      "foregoneAmount": 0.0,
                      "makeGoodAmount": 25.0,
                      "name": "Professional Subscription"
                    },
                    {
                      "amount": 350.0,
                      "foregoneAmount": 500.0,
                      "makeGoodAmount": 0.0,
                      "name": "Other Benefit"
                    }
                  ],
                  "deductions": [
                    {
                      "deductionType": "Student Loan",
                      "loanType": "Plan1"
                    },
                    {
                      "deductionType": "Postgraduate Loan"
                    },
                    {
                      "amount": 200,
                      "deductionType": "Other",
                      "name": "Withdrawal"
                    }
                  ],
                  "earnings": [
                    {
                      "amount": 36000.0,
                      "earningFrequency": "year",
                      "earningType": "Salary",
                      "isLumpsum": false
                    },
                    {
                      "amount": 1000.0,
                      "earningFrequency": "year",
                      "earningType": "Bonus",
                      "isLumpsum": true
                    }
                  ],
                  "reimbursements": [
                    {
                      "amount": 275.5,
                      "name": "Business Travel"
                    }
                  ]
                },
                "taxCode": "1257L"
              }
            ]
          }
        ]
      },
      "payroll__uk__schema__request__PayrollRequestBase": {
        "properties": {
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "Employee identification number",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "payDetails": {
            "$ref": "#/components/schemas/payroll__uk__schema__request__Gross"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeId", "payDetails"],
        "title": "PayrollRequestBase",
        "description": "Input parameters"
      },
      "payroll__uk__schema__request__Reimbursement": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "amount"],
        "title": "Reimbursement"
      },
      "payroll__uk__schema__response__CurrentPayPeriod": {
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__EmployeeCurrentPayPeriod"
          },
          "employer": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__EmployerCurrentPayPeriod"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "CurrentPayPeriod"
      },
      "payroll__uk__schema__response__EmployeeCurrentPayPeriod": {
        "properties": {
          "totals": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__EmployeeTotals"
          },
          "benefits": {
            "$ref": "#/components/schemas/EmployeeBenefits"
          },
          "taxes": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__EmployeeTaxes"
          },
          "insurance": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__EmployeeInsurance"
          },
          "deductions": {
            "items": {
              "$ref": "#/components/schemas/DeductionsResponse"
            },
            "type": "array",
            "title": "Deductions"
          },
          "reimbursements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReimbursementResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reimbursements"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeCurrentPayPeriod"
      },
      "payroll__uk__schema__response__EmployeeInsurance": {
        "properties": {
          "insuranceAssessmentBase": {
            "type": "string",
            "title": "Insuranceassessmentbase",
            "default": "0.00"
          },
          "nationalInsurance": {
            "type": "string",
            "title": "Nationalinsurance",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeInsurance"
      },
      "payroll__uk__schema__response__EmployeeTaxes": {
        "properties": {
          "incomeTaxAssessmentBase": {
            "type": "string",
            "title": "Incometaxassessmentbase",
            "default": "0.00"
          },
          "incomeTax": {
            "type": "string",
            "title": "Incometax",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeTaxes"
      },
      "payroll__uk__schema__response__EmployeeTotals": {
        "properties": {
          "grossWages": {
            "type": "string",
            "title": "Grosswages",
            "default": "0.00"
          },
          "netWages": {
            "type": "string",
            "title": "Netwages",
            "default": "0.00"
          },
          "totalDeductions": {
            "type": "string",
            "title": "Totaldeductions",
            "default": "0.00"
          },
          "totalReimbursements": {
            "type": "string",
            "title": "Totalreimbursements",
            "default": "0.00"
          },
          "netPay": {
            "type": "string",
            "title": "Netpay",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployeeTotals"
      },
      "payroll__uk__schema__response__EmployerCurrentPayPeriod": {
        "properties": {
          "secondaryClass1Nic": {
            "type": "string",
            "title": "Secondaryclass1Nic",
            "default": "0.00"
          },
          "class1ANic": {
            "type": "string",
            "title": "Class1Anic",
            "default": "0.00"
          },
          "employerPensionContribution": {
            "type": "string",
            "title": "Employerpensioncontribution",
            "default": "0.00"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EmployerCurrentPayPeriod"
      },
      "payroll__uk__schema__response__PayrollResponse": {
        "properties": {
          "run": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "payslips": {
            "items": {
              "$ref": "#/components/schemas/payroll__uk__schema__response__Payslip"
            },
            "type": "array",
            "title": "Payslips"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Errors"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["run", "payslips", "errors"],
        "title": "PayrollResponse"
      },
      "payroll__uk__schema__response__Payslip": {
        "properties": {
          "paymentPeriod": {
            "$ref": "#/components/schemas/payroll__uk__uktypes__PayCycleType",
            "default": "Month"
          },
          "employeeId": {
            "type": "string",
            "pattern": "^emp_[0-9a-v]{26}$",
            "title": "Employeeid",
            "description": "TypeID with prefix 'emp'",
            "example": "emp_01h455vb4pex5vsknk084sn02q"
          },
          "currentPayPeriod": {
            "$ref": "#/components/schemas/payroll__uk__schema__response__CurrentPayPeriod"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["employeeId", "currentPayPeriod"],
        "title": "Payslip"
      },
      "payroll__uk__uktypes__PayCycleType": {
        "type": "string",
        "enum": ["Year", "Month", "Week", "Day"],
        "title": "PayCycleType"
      },
      "payroll__uk__uktypes__PaymentPeriod": {
        "type": "string",
        "enum": ["year", "month", "week"],
        "title": "PaymentPeriod",
        "description": "Payment Period"
      }
    },
    "securitySchemes": {
      "BearerToken": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
